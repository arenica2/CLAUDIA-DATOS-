tdr_cnsldd<- read.dbf(path.expand("control/tdr_cnsldd.dbf"), as.is = TRUE)
#Deshabitada
tdd_cnsldd<- read.dbf(path.expand("control/tdd_cnsldd.dbf"), as.is = TRUE)
#Local publico
tdp_cnsldd<- read.dbf(path.expand("control/tdp_cnsldd.dbf"), as.is = TRUE)
#Lote vacio
tdv_cnsldd<- read.dbf(path.expand("control/tdv_cnsldd.dbf"), as.is = TRUE)
#Utilizando la funcion CreateUnicode, para obtener los UNICODEs
tdc_cnsldd <- CreateUnicode(tdc_cnsldd)
tdr_cnsldd <- CreateUnicode(tdr_cnsldd)
tdd_cnsldd <- CreateUnicode(tdd_cnsldd)
tdp_cnsldd <- CreateUnicode(tdp_cnsldd)
tdv_cnsldd <- CreateUnicode(tdv_cnsldd)
# Obteniendo el ciclo de rociado real sacado de la columna CODCNSLDD
tdc_cnsldd$CICLO_ROCIADO<-substr(tdc_cnsldd$CODCNSLDD,8,8)
tdr_cnsldd$CICLO_ROCIADO<-substr(tdr_cnsldd$CODCNSLDD,8,8)
tdd_cnsldd$CICLO_ROCIADO<-substr(tdd_cnsldd$CODCNSLDD,8,8)
tdp_cnsldd$CICLO_ROCIADO<-substr(tdp_cnsldd$CODCNSLDD,8,8)
tdv_cnsldd$CICLO_ROCIADO<-substr(tdv_cnsldd$CODCNSLDD,8,8)
#Creando una columna STATUS
tdc_cnsldd$STATUS <- unlist("C")
tdr_cnsldd$STATUS <- unlist("R")
tdd_cnsldd$STATUS <- unlist("DES")
tdp_cnsldd$STATUS <- unlist("LP")
tdv_cnsldd$STATUS <- unlist("LV")
View(tdc_cnsldd)
View(tdc_cnsldd)
tdc_cnsldd <- tdc_cnsldd[, c(1:5,19,20)]
tdr_cnsldd <- tdr_cnsldd[, c(1:5,19,20)]
tdd_cnsldd <- tdd_cnsldd[, c(1:5,19,20)]
tdp_cnsldd <- tdp_cnsldd[, c(1:5,19,20)]
tdv_cnsldd <- tdv_cnsldd[, c(1:5,19,20)]
#Juntando
C_R <- merge(tdc_cnsldd,tdr_cnsldd, all = TRUE)
C_R_D <- merge(C_R,tdd_cnsldd, all = TRUE)
C_R_D_LP <- merge(C_R_D,tdp_cnsldd, all = TRUE)
C_R_D_LP_LV <-merge(C_R_D_LP,tdv_cnsldd, all = TRUE)
#Obteniendo registros unicos
C_R_D_LP_LV <- unique(C_R_D_LP_LV)
View(C_R_D_LP_LV)
tratadas_ASA<-filtro(CONS_ROCIADO_2009_2015,dentro)
tratadas <- tratadas_ASA
View(tratadas)
View(tratadas_ASA)
tratadas$STATUS <- unlist("T")
tratadas <- tratadas[,c(1:5,21,32,48,52)]
tratadas <- unique(tratadas)
View(tratadas)
setwd("/home/gianfranco/Documentos/github/Participation/bd_minsa/resultados")
write.csv(tratadas_ASA,'tratadas_ASA.csv')
ruta_2 <- '/home/gianfranco/Documentos/github/Participation/bd_minsa/resultados'
rm(list = ls())
#-RUTAS UTILIZADAS
ruta_1 <- '/home/gianfranco/Documentos/github/Participation/merge_participacion/resultados'
ruta_2 <- '/home/gianfranco/Documentos/github/Participation/bd_minsa/resultados'
#Ruta
setwd(ruta_1)
#Leer los archivos
aux<-read.csv("info_sindupli_c1yc2ASA.csv")
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE A     ----------------|
#------------------------------------------------------------------>
aux$sampleA <- 0
aux$sampleA[aux$ESTA_ESTRATEGIAS==1 | !is.na(aux$STATUS_C1_MINSA)] <- 1
table(aux$sampleA==1, aux$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE B     ----------------|
#------------------------------------------------------------------>
aux$sampleB<- 1
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE  C    ----------------|
#------------------------------------------------------------------>
aux$sampleC <- 0
aux$sampleC[aux$sampleA==1 & !(is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0) & !grepl(1,aux$DES)] <- 1
table(aux$sampleC==1, aux$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE  D    ----------------|
#------------------------------------------------------------------>
aux$sampleD <- 0
aux$sampleD[aux$sampleB==1 & !(is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0) & !grepl(1,aux$DES)] <- 1
table(aux$sampleD==1, aux$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE  E    ----------------|
#------------------------------------------------------------------>
aux$sampleE <- 0
aux$sampleE[aux$sampleB==1 & !(grepl(3,aux$STATUS, fixed = TRUE)) & !(is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0) & !grepl(1,aux$DES) & !(aux$ESTA_CUANTIS==0 & aux$ESTA_SENSIS==0 & aux$ESTA_ESTRATEGIAS==1 & is.na(aux$STATUS))] <- 1
#OJO: hay intersecciÃ³n en 10 viviendas que son C y DES
table(aux$sampleE==1, aux$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE  F    ----------------|
#------------------------------------------------------------------>
aux$sampleF <- 0
aux$sampleF[aux$sampleC==1 & grepl("T",aux$STATUS_C1_MINSA)] <- 1
table(aux$sampleF==1, aux$ESTRATEGIA, useNA = "ifany")
#---------------------------------------------------------------------------------------->
#-   Viviendas que aumentaron en C1_MINSA con respecto a bd_estrategia por estrategia   -|
#---------------------------------------------------------------------------------------->
#Total: 37
x <- aux[aux$ESTA_ESTRATEGIAS==0 & !is.na(aux$STATUS_C1_MINSA),]
table(x$ESTRATEGIA, useNA = "ifany")
#---------------------------------------------------------------------------------------------------->
#-   Viviendas que aumentaron en C2_MINSA con respecto a C1_MINSA y bd_estrategia, por estrategia   -|
#---------------------------------------------------------------------------------------------------->
#Total: 52
x <- aux[aux$ESTA_ESTRATEGIAS==0 & is.na(aux$STATUS_C1_MINSA) & (aux$ESTA_CUANTIS==1 | aux$ESTA_SENSIS==1 | !is.na(aux$STATUS_C2_MINSA)),]
table(x$ESTRATEGIA, useNA = "ifany")
#---------------------------------------------------------------------------------------->
#-        Cantidad de tratadas que nunca fueron visitadas, por cada estrategia          -|
#---------------------------------------------------------------------------------------->
#Total: 25
x <- aux[aux$ESTA_SENSIS==0 & grepl(1,aux$T_Cuantis),]
table(x$ESTRATEGIA, useNA = "ifany")
#---------------------------------------------------------------------------------------->
#-    Cantidad de casas CERRADAS por estrategia, estoy utilizando la columna STATUS     -|
#---------------------------------------------------------------------------------------->
#Total: 464
x <- aux[grepl(3,aux$STATUS),]
table(x$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#-    Cantidad de casa que no sabemos si fueron rociadas o no     -|
#------------------------------------------------------------------>
#Sample A: 7
x <- aux[aux$sampleA==1 & is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0,]
table(x$ESTRATEGIA, useNA = "ifany")
#Sample B: 8
x <- aux[aux$sampleB==1 & is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0,]
table(x$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#-      Cantidad de casas nunca se visitaron, por estrategia      -|
#------------------------------------------------------------------>
#Total: 52,ahora son 49
x <- aux[aux$ESTA_CUANTIS==0 & aux$ESTA_SENSIS==0 & aux$ESTA_ESTRATEGIAS==1 & is.na(aux$STATUS),]
table(x$ESTRATEGIA, useNA = "ifany")
#-------------------------------------------------------------------------------------->
#- Cantidad de casas DESHABITADAS por estrategia (todo con respecto al estado del C2) -|
#-------------------------------------------------------------------------------------->
#SAMPLE A: Casas DES y T
#Total: 54
x <- aux[aux$sampleA==1 & grepl(1,aux$T) & grepl(1,aux$DES),]
table(x$ESTRATEGIA, useNA = "ifany")
#SAMPLE A: Casas DES
#Total: 14
x <- aux[aux$sampleA==1 & !grepl(1,aux$T) & grepl(1,aux$DES),]
table(x$ESTRATEGIA, useNA = "ifany")
#SAMPLE B: Casas DES y T
#Total: 54
x <- aux[aux$sampleB==1 & grepl(1,aux$T) & grepl(1,aux$DES),]
table(x$ESTRATEGIA, useNA = "ifany")
#SAMPLE B: Casas DES
#Total: 14
x <- aux[aux$sampleB==1 & !grepl(1,aux$T) & grepl(1,aux$DES),]
table(x$ESTRATEGIA, useNA = "ifany")
View(aux)
setwd(ruta_2)
tratadas_ASA<-read.csv("tratadas_ASA.csv")
setwd(ruta_1)
tratadas_ASA<-read.csv(file = paste(ruta_2,"tratadas_ASA.csv", sep = "/"))
View(tratadas_ASA)
trat_c1_minsa <- tratadas_ASA[tratadas_ASA$CICLO_ROCIADO==1,]
View(trat_c1_minsa)
View(tratadas_ASA)
View(trat_c1_minsa)
x <- subset(trat_c1_minsa, list= c("UNICODE", "NUMRES", "IN_AMB"))
x <- subset(trat_c1_minsa, select = c("UNICODE", "NUMRES", "IN_AMB"))
View(x)
trat_c1_minsa <- subset(trat_c1_minsa, select = c("UNICODE", "NUMRES", "IN_AMB"))
x <- unique(trat_c1_minsa)
View(trat_c1_minsa)
View(aux)
x <- merge(aux, trat_c1_minsa, all = TRUE)
View(x)
a <- aux
b<- trat_c1_minsa
a$a<-1
b$b<-1
c <- merge(a,b, all = TRUE)
d <- c[c$a==1 & c$b==1,]
View(d)
d <- c[!is.na(c$a) & !is.na(c$b),]
e <- c[!is.na(c$a),]
View(e)
e <- c[is.na(c$a),]
f <- c[is.na(c$b),]
View(aux)
View(a)
table(a$a, useNA = "ifany")
table(b$b, useNA = "ifany")
View(b)
c <- merge(a,b, by = "UNICODE", all = TRUE)
indice_dupli <- trat_c1_minsa[which(duplicated(trat_c1_minsa$UNICODE)),1]
dupli<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% indice_dupli,]
View(dupli)
dupli <- dupli[order(dupli$UNICODE),]
x <- tratadas_ASA[tratadas_ASA$UNICODE %in% indice_dupli,]
View(x)
x <- x[order(x$UNICODE),]
View(x)
tratadas_ASA<-read.csv("tratadas_ASA.csv")
setwd(ruta_2)
tratadas_ASA<-read.csv("tratadas_ASA.csv")
trat_c1_minsa <- tratadas_ASA[tratadas_ASA$CICLO_ROCIADO==1,]
trat_c1_minsa <- subset(trat_c1_minsa, select = c("UNICODE", "NUMRES", "IN_AMB"))
trat_c1_minsa <- unique(trat_c1_minsa)
indice_dupli <- trat_c1_minsa[which(duplicated(trat_c1_minsa$UNICODE)),1]
dupli<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% indice_dupli,]
View(dupli)
trat_c1_minsa <- trat_c1_minsa[unique(trat_c1_minsa$UNICODE),]
indice_dupli <- trat_c1_minsa[which(duplicated(trat_c1_minsa$UNICODE)),1]
dupli<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% indice_dupli,]
View(dupli)
tratadas_ASA<-read.csv("tratadas_ASA.csv")
trat_c1_minsa <- tratadas_ASA[tratadas_ASA$CICLO_ROCIADO==1,]
trat_c1_minsa <- subset(trat_c1_minsa, select = c("UNICODE", "NUMRES", "IN_AMB"))
trat_c1_minsa <- unique(trat_c1_minsa) #
unico <- trat_c1_minsa[which(unique(trat_c1_minsa$UNICODE)),1]
unico <- trat_c1_minsa[unique(trat_c1_minsa$UNICODE),1]
x<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% unico,]
View(x)
indice_dupli <- x[which(duplicated(x$UNICODE)),1]
dupli<-x[x$UNICODE %in% indice_dupli,]
View(dupli)
unico <- unique(trat_c1_minsa$UNICODE)
x <- trat_c1_minsa
x$UNICODE <- as.character(x$UNICODE)
unico <- x[unique(x$UNICODE),]
trat_c1_minsa <- trat_c1_minsa[unique(trat_c1_minsa$UNICODE),]
indice_dupli <- trat_c1_minsa[which(duplicated(trat_c1_minsa$UNICODE)),1]
dupli<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% indice_dupli,]# 24 duplicados
View(dupli)
View(trat_c1_minsa)
trat_c1_minsa <- unique(trat_c1_minsa$UNICODE)
View(unico)
tratadas_ASA<-read.csv("tratadas_ASA.csv")
#Filtrando solo las viviendas que fueron rociadas en el "CICLO 1 MINSA"
trat_c1_minsa <- tratadas_ASA[tratadas_ASA$CICLO_ROCIADO==1,]
#Seleccionando solo los campos de mi interÃ©s, en este caso: "UNICODE", "NUMRES" y "IN_AMB"
trat_c1_minsa <- subset(trat_c1_minsa, select = c("UNICODE", "NUMRES", "IN_AMB"))
#Obteniendo registros Ãºnicos
trat_c1_minsa <- unique(trat_c1_minsa) # eliminamos 15 registros
indice_dupli <- trat_c1_minsa[which(duplicated(trat_c1_minsa$UNICODE)),1]
dupli<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% indice_dupli,]# 24 duplicados
trat_c1_minsa$UNICODE <- as.character(trat_c1_minsa$UNICODE)
x <- unique(trat_c1_minsa$UNICODE)
y<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% x,]
x <- trat_c1_minsa[unique(trat_c1_minsa$UNICODE),]
View(x)
unique(trat_c1_minsa)
x <- trat_c1_minsa[which(!duplicated(trat_c1_minsa$UNICODE)),1]
y<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% x,] un
y<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% x,]
x <- trat_c1_minsa[which(!duplicated(trat_c1_minsa$UNICODE)),]
View(x)
x <- x[order(x$UNICODE),]
View(x)
tratadas_ASA<-read.csv("tratadas_ASA.csv")
#Filtrando solo las viviendas que fueron rociadas en el "CICLO 1 MINSA"
trat_c1_minsa <- tratadas_ASA[tratadas_ASA$CICLO_ROCIADO==1,]
#Seleccionando solo los campos de mi interÃ©s, en este caso: "UNICODE", "NUMRES" y "IN_AMB"
trat_c1_minsa <- subset(trat_c1_minsa, select = c("UNICODE", "NUMRES", "IN_AMB"))
#Obteniendo registros Ãºnicos
trat_c1_minsa <- unique(trat_c1_minsa) # eliminamos 15 registros
x <- trat_c1_minsa[which(!duplicated(trat_c1_minsa$UNICODE)),]
View(x)
trat_c1_minsa <- trat_c1_minsa[which(!duplicated(trat_c1_minsa$UNICODE)),]
indice_dupli <- trat_c1_minsa[which(duplicated(trat_c1_minsa$UNICODE)),1]
dupli<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% indice_dupli,]# 24 duplicados
aux <- merge(aux, trat_c1_minsa, all = TRUE)
View(aux)
x <- aux[is.na(aux$STATUS_C1_MINSA),]
y <- aux[is.na(aux$NUMRES),]
x <- aux[grepl("T", aux$STATUS_C1_MINSA),]
y <- aux[!is.na(aux$NUMRES),]
x <- aux[aux$sampleC==1 & grepl("T", aux$STATUS_C1_MINSA),]
x <- aux[grepl("T", aux$STATUS_C1_MINSA),]
x <- aux[aux$sampleC==1,]
x <- aux[aux$sampleC==1 & grepl("T", aux$STATUS_C1_MINSA),]
table(x$ESTRATEGIA, useNA = "ifany")
View(x)
View(aux)
x <- aux[aux$sampleC==1 & grepl("T", aux$STATUS_C1_MINSA) & grepl(1, aux$pos_C1),]
y <- aux[aux$sampleC==1 & grepl(1, aux$pos_C1),]
x <- aux[aux$sampleC==1 & grepl(1, aux$pos_C1),]
table(x$ESTRATEGIA, useNA = "ifany")
table(aux$IN_AMB, useNA = "ifany")
table(!(aux$IN_AMB), useNA = "ifany")
table(is.na(aux$IN_AMB), useNA = "ifany")
table(!is.na(aux$IN_AMB), useNA = "ifany")
table(!is.na(aux$IN_AMB), aux$ESTRATEGIA, useNA = "ifany")
tapply(!is.na(aux$IN_AMB), aux$ESTRATEGIA, FUN = mean)
table(!is.na(aux$IN_AMB), aux$ESTRATEGIA=="Adv.Planning", useNA = "ifany")
table(aux$IN_AMB, aux$ESTRATEGIA=="Adv.Planning", useNA = "ifany")
10209/332
332/10209
25/10209
10209/1054
tapply(!is.na(aux$IN_AMB), aux$ESTRATEGIA, FUN = mean)
table(aux$IN_AMB, aux$ESTRATEGIA=="Adv.Planning", useNA = "ifany")
tapply(!is.na(aux$IN_AMB), aux$ESTRATEGIA, FUN = mean)
table(aux$IN_AMB, useNA = "ifany")
tapply(aux$IN_AMB, FUN = mean)
tapply(!is.na(aux$IN_AMB), aux$ESTRATEGIA=="Adv.Planning", FUN = mean)
x <- aux[is.na(aux$IN_AMB),]
x <- aux[!is.na(aux$IN_AMB),]
tapply(x$IN_AMB, aux$ESTRATEGIA, FUN = mean)
tapply(x$IN_AMB, x$ESTRATEGIA, FUN = mean)
table(x$IN_AMB, useNA = "ifany")
y <- data.frame()
y$IN_AMB <- c(2,5,6,5,7,32,4,12)
y$IN_AMB[] <- c(2,5,6,5,7,32,4,12)
View(y)
y <- data.frame()
y[1,1] <- 2
y[2,1] <- 5
y[3,1] <- 4
y[4,1] <- 10
y[5,1] <- 32
y[6,1] <- 9
y
colnames(y)<- "IN_AMB"
y$ESTRATEGIAS <- "Adv.Planning"
y
tapply(y$IN_AMB, y$ESTRATEGIAS, FUN = mean)
x <- aux[aux$sampleC==1 & !is.na(aux$IN_AMB),]
tapply(y$IN_AMB, y$ESTRATEGIAS, FUN = mean)
tapply(x$IN_AMB, x$ESTRATEGIA, FUN = mean)
x <- aux[aux$sampleC==1 & !is.na(aux$NUMRES),]
tapply(x$NUMRES, x$ESTRATEGIA, FUN = mean)
rm(list = ls())
#-RUTAS UTILIZADAS
ruta_1 <- '/home/gianfranco/Documentos/github/Participation/merge_participacion/resultados'
ruta_2 <- '/home/gianfranco/Documentos/github/Participation/bd_minsa/resultados'
#Ruta
setwd(ruta_1)
#Leer los archivos
aux<-read.csv("info_sindupli_c1yc2ASA.csv")
#Eliminando la primera columna
aux <- aux[,-1]
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE A     ----------------|
#------------------------------------------------------------------>
aux$sampleA <- 0
aux$sampleA[aux$ESTA_ESTRATEGIAS==1 | !is.na(aux$STATUS_C1_MINSA)] <- 1
table(aux$sampleA==1, aux$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE B     ----------------|
#------------------------------------------------------------------>
aux$sampleB<- 1
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE  C    ----------------|
#------------------------------------------------------------------>
aux$sampleC <- 0
aux$sampleC[aux$sampleA==1 & !(is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0) & !grepl(1,aux$DES)] <- 1
table(aux$sampleC==1, aux$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE  D    ----------------|
#------------------------------------------------------------------>
aux$sampleD <- 0
aux$sampleD[aux$sampleB==1 & !(is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0) & !grepl(1,aux$DES)] <- 1
table(aux$sampleD==1, aux$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE  E    ----------------|
#------------------------------------------------------------------>
aux$sampleE <- 0
aux$sampleE[aux$sampleB==1 & !(grepl(3,aux$STATUS, fixed = TRUE)) & !(is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0) & !grepl(1,aux$DES) & !(aux$ESTA_CUANTIS==0 & aux$ESTA_SENSIS==0 & aux$ESTA_ESTRATEGIAS==1 & is.na(aux$STATUS))] <- 1
#OJO: hay intersecciÃ³n en 10 viviendas que son C y DES
table(aux$sampleE==1, aux$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#----------------   Agregando columna SAMPLE  F    ----------------|
#------------------------------------------------------------------>
aux$sampleF <- 0
aux$sampleF[aux$sampleC==1 & grepl("T",aux$STATUS_C1_MINSA)] <- 1
table(aux$sampleF==1, aux$ESTRATEGIA, useNA = "ifany")
#---------------------------------------------------------------------------------------->
#-   Viviendas que aumentaron en C1_MINSA con respecto a bd_estrategia por estrategia   -|
#---------------------------------------------------------------------------------------->
#Total: 37
x <- aux[aux$ESTA_ESTRATEGIAS==0 & !is.na(aux$STATUS_C1_MINSA),]
table(x$ESTRATEGIA, useNA = "ifany")
#---------------------------------------------------------------------------------------------------->
#-   Viviendas que aumentaron en C2_MINSA con respecto a C1_MINSA y bd_estrategia, por estrategia   -|
#---------------------------------------------------------------------------------------------------->
#Total: 52
x <- aux[aux$ESTA_ESTRATEGIAS==0 & is.na(aux$STATUS_C1_MINSA) & (aux$ESTA_CUANTIS==1 | aux$ESTA_SENSIS==1 | !is.na(aux$STATUS_C2_MINSA)),]
table(x$ESTRATEGIA, useNA = "ifany")
#---------------------------------------------------------------------------------------->
#-        Cantidad de tratadas que nunca fueron visitadas, por cada estrategia          -|
#---------------------------------------------------------------------------------------->
#Total: 25
x <- aux[aux$ESTA_SENSIS==0 & grepl(1,aux$T_Cuantis),]
table(x$ESTRATEGIA, useNA = "ifany")
#---------------------------------------------------------------------------------------->
#-    Cantidad de casas CERRADAS por estrategia, estoy utilizando la columna STATUS     -|
#---------------------------------------------------------------------------------------->
#Total: 464
x <- aux[grepl(3,aux$STATUS),]
table(x$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#-    Cantidad de casa que no sabemos si fueron rociadas o no     -|
#------------------------------------------------------------------>
#Sample A: 7
x <- aux[aux$sampleA==1 & is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0,]
table(x$ESTRATEGIA, useNA = "ifany")
#Sample B: 8
x <- aux[aux$sampleB==1 & is.na(aux$STATUS) & aux$ESTA_ESTRATEGIAS==0,]
table(x$ESTRATEGIA, useNA = "ifany")
#------------------------------------------------------------------>
#-      Cantidad de casas nunca se visitaron, por estrategia      -|
#------------------------------------------------------------------>
#Total: 52,ahora son 49
x <- aux[aux$ESTA_CUANTIS==0 & aux$ESTA_SENSIS==0 & aux$ESTA_ESTRATEGIAS==1 & is.na(aux$STATUS),]
table(x$ESTRATEGIA, useNA = "ifany")
#-------------------------------------------------------------------------------------->
#- Cantidad de casas DESHABITADAS por estrategia (todo con respecto al estado del C2) -|
#-------------------------------------------------------------------------------------->
#SAMPLE A: Casas DES y T
#Total: 54
x <- aux[aux$sampleA==1 & grepl(1,aux$T) & grepl(1,aux$DES),]
table(x$ESTRATEGIA, useNA = "ifany")
#SAMPLE A: Casas DES
#Total: 14
x <- aux[aux$sampleA==1 & !grepl(1,aux$T) & grepl(1,aux$DES),]
table(x$ESTRATEGIA, useNA = "ifany")
#SAMPLE B: Casas DES y T
#Total: 54
x <- aux[aux$sampleB==1 & grepl(1,aux$T) & grepl(1,aux$DES),]
table(x$ESTRATEGIA, useNA = "ifany")
#SAMPLE B: Casas DES
#Total: 14
x <- aux[aux$sampleB==1 & !grepl(1,aux$T) & grepl(1,aux$DES),]
table(x$ESTRATEGIA, useNA = "ifany")
setwd(ruta_2)
tratadas_ASA<-read.csv("tratadas_ASA.csv")
#Filtrando solo las viviendas que fueron rociadas en el "CICLO 1 MINSA"
trat_c1_minsa <- tratadas_ASA[tratadas_ASA$CICLO_ROCIADO==1,]
#Seleccionando solo los campos de mi interÃ©s, en este caso: "UNICODE", "NUMRES" y "IN_AMB"
trat_c1_minsa <- subset(trat_c1_minsa, select = c("UNICODE", "NUMRES", "IN_AMB"))
#Obteniendo registros Ãºnicos
trat_c1_minsa <- unique(trat_c1_minsa) # eliminamos 15 registros
#Buscando UNICODE duplicados
indice_dupli <- trat_c1_minsa[which(duplicated(trat_c1_minsa$UNICODE)),1]
dupli<-trat_c1_minsa[trat_c1_minsa$UNICODE %in% indice_dupli,]# 24 duplicados
#Elegimos los primeros de cada duplicado
trat_c1_minsa <- trat_c1_minsa[which(!duplicated(trat_c1_minsa$UNICODE)),]
#Merge: Juantando con la base de datos general ("info_sindupli_c1yc2ASA" = aux)
aux <- merge(aux, trat_c1_minsa, all = TRUE)
x <- aux[aux$sampleC==1 & grepl("T", aux$STATUS_C1_MINSA),]
x <- aux[aux$sampleC==1 & grepl("T", aux$STATUS_C1_MINSA),]
table(x$ESTRATEGIA, useNA = "ifany")
x <- aux[aux$sampleC==1,]
table(x$ESTRATEGIA, useNA = "ifany")
x <- aux[aux$sampleC==1 & grepl("T", aux$STATUS_C1_MINSA),]
table(x$ESTRATEGIA, useNA = "ifany")
x <- aux[aux$sampleC==1 & grepl(1, aux$pos_C1),]
table(x$ESTRATEGIA, useNA = "ifany")
x <- aux[aux$sampleC==1 & !is.na(aux$IN_AMB),]
tapply(x$IN_AMB, x$ESTRATEGIA, FUN = mean)
x <- aux[aux$sampleC==1 & !is.na(aux$NUMRES),]
tapply(x$NUMRES, x$ESTRATEGIA, FUN = mean)
x <- aux[aux$sampleC==1 & grepl("T", aux$STATUS_C1_MINSA),]
View(aux)
table(grepl("1.1.7.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- x[grepl("1.1.7.", x$UNICODE, fixed = TRUE),]
y <- x[grepl("1.1.7.", x$UNICODE),]
table(grepl("1.1.8.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.7.", auxx$UNICODE),]
y <- aux[grepl("1.1.7.", aux$UNICODE),]
View(y)
y <- aux[grepl("1.1.7.", aux$UNICODE, fixed = TRUE),]
View(y)
totLoc7 <- aux[grepl("1.1.7.", aux$UNICODE, fixed = TRUE),]
y <- aux[grepl("1.1.8.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.13.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.13.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.14.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
table(grepl("1.1.14.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.14.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.22.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.22.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.23.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.23.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.25.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.25.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.26.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.26.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.27.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.27.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.29.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.29.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.34.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.34.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.36.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.36.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.39.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.39.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.42.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.42.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.44.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.44.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.45.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.45.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.71.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.71.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.77.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.77.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.78.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.78.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.81.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.81.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.82.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.82.", aux$UNICODE, fixed = TRUE),]
table(grepl("1.1.83.", x$UNICODE, fixed = TRUE),x$ESTRATEGIA, useNA = "ifany")
y <- aux[grepl("1.1.83.", aux$UNICODE, fixed = TRUE),]
