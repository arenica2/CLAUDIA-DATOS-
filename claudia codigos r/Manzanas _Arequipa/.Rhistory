merge_cerro<- merge_cerro[TRATAMIENTO=='Rifa',TRATAMIENTO:="1"]
merge_cerro<- merge_cerro[TRATAMIENTO=='Control',TRATAMIENTO:="0"]
#
# Justin's modifications
merge_cerro$TRATAMIENTO <- droplevels(merge_cerro$TRATAMIENTO)
merge_cerro$TRATAMIENTO <- as.numeric(levels(merge_cerro$TRATAMIENTO))[merge_cerro$TRATAMIENTO]
geecerrocolorado<-geeglm(formula = TRATAMIENTO~STATUS,family = binomial(link = logit),data = merge_cerro,id = CLUSTER)
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
#########INTENT-TO-TREAT-##########################
###################################################
#eliminando de la muestra las casas adicionadas en primer y segundo ciclo
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]#47
merge_cerro<-merge_cerro[!c(added_1C=='1')]#414
#EXCLUDING HOUSES WITHOUT OUTCOME AND INHABITED
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]#10
##creating a new column "STATUS" with values : SPRAYED(1) NOT SPRAYED(0)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
#selecting necessary fie
merge_cerro<- merge_cerro[,c("UNICODE","TRATAMIENTO","STATUS","CLUSTER","LATITUDE","LONGITUDE")]
#changing treatment :
# RIFA==1
# CONTROL==0
merge_cerro<- merge_cerro[TRATAMIENTO=='Rifa',TRATAMIENTO:="1"]
merge_cerro<- merge_cerro[TRATAMIENTO=='Control',TRATAMIENTO:="0"]
#
# Justin's modifications
merge_cerro$TRATAMIENTO <- droplevels(merge_cerro$TRATAMIENTO)
merge_cerro$TRATAMIENTO <- as.numeric(levels(merge_cerro$TRATAMIENTO))[merge_cerro$TRATAMIENTO]
geecerrocolorado<-geeglm(formula = TRATAMIENTO~STATUS,family = binomial(link = logit),data = merge_cerro,id = CLUSTER)
exp(coef(geecerrocolorado))
exp(confint(geecerrocolorado))
str(geecerrocolorado)
summary(geecerrocolorado)
View(BASE_PAR_CC_I_II)
anova(geecerrocolorado)
geecerrocolorado<-gee(formula = TRATAMIENTO~STATUS,family = binomial(link = logit),data = merge_cerro,id = CLUSTER)
summary(geecerrocolorado)
install.packages("qicpack")
install.packages("QICpack")
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE")]
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
View(BASE_PAR_CC_I_II)
View(BASE_PAR_CC_I_II)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
merge_cerro<-merge_cerro[!c(added_1C=='1')]
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]
merge_cerro<-merge_cerro[!c(added_1C=='1')]
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
View(merge_cerro)
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='1',POS:='1']
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='0' & POS_CHIRI=='0'|POS_CHIRI==NA,POS:='0']
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='0' & POS_CHIRI=='0'|POS_CHIRI=='NA',POS:='0']
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='0' & POS_CHIRI=='0',POS:='0']
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='0' & POS_CHIRI=='0']<-merge_cerro$POS=='0'
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
#########INTENT-TO-TREAT-##########################
###################################################
#eliminando de la muestra las casas adicionadas en primer y segundo ciclo
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]#47
merge_cerro<-merge_cerro[!c(added_1C=='1')]#414
#EXCLUDING HOUSES WITHOUT OUTCOME AND INHABITED
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]#11
##creating a new column "STATUS" with values : SPRAYED(1) NOT SPRAYED(0)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
#ASSIGN VALUES TO POSITIVES HOUSES IN COLUMN POS
#(SPRAYED/positive = 1, SPRAYED/negative = 0)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='1',POS:='1']
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='0' & POS_CHIRI=='0']<-merge_cerro$POS=='0'
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
#########INTENT-TO-TREAT-##########################
###################################################
#eliminando de la muestra las casas adicionadas en primer y segundo ciclo
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]#47
merge_cerro<-merge_cerro[!c(added_1C=='1')]#414
#EXCLUDING HOUSES WITHOUT OUTCOME AND INHABITED
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]#11
##creating a new column "STATUS" with values : SPRAYED(1) NOT SPRAYED(0)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
#ASSIGN VALUES TO POSITIVES HOUSES IN COLUMN POS
#(SPRAYED/positive = 1, SPRAYED/negative = 0)
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='1',POS:='1']
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='0' & POS_CHIRI=='0',POS:='0']
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='0'|POS_CHIRI==NA,POS:='0']
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='0'|POS_CHIRI== 'NA',POS:='0']
View(merge_cerro)
table(merge_cerro$STATUS)
table(merge_cerro$POS)
View(BASE_PAR_CC_I_II)
View(merge_cerro)
length(which(is.na(merge_cerro$POS)))
merge_cerro<- merge_cerro[,c("UNICODE","TRATAMIENTO","STATUS","CLUSTER","LATITUDE","LONGITUDE",'POS')]
View(merge_cerro)
# RIFA==1
# CONTROL==0
merge_cerro<- merge_cerro[TRATAMIENTO=="Rifa",TRATAMIENTO:="1"]
merge_cerro<- merge_cerro[TRATAMIENTO=="Control",TRATAMIENTO:="0"]
View(merge_cerro)
merge_cerro$TRATAMIENTO <- droplevels(merge_cerro$TRATAMIENTO)
merge_cerro$TRATAMIENTO <- as.numeric(levels(merge_cerro$TRATAMIENTO))[merge_cerro$TRATAMIENTO]
geecerrocolorado<-geeglm(formula = TRATAMIENTO ~ STATUS+,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
geecerrocolorado<-geeglm(formula = TRATAMIENTO ~ STATUS + POS,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
merge_cerro$POS<-droplevels(merge_cerro$POS)
merge_cerro$POS<-as.numeric(merge_cerro)
merge_cerro$POS<-as.numeric(merge_cerro$POS)
merge_cerro$POS<-droplevels(merge_cerro$POS)
class(merge_cerro$POS)
merge_cerro$POS<-as.factor(merge_cerro$POS)
merge_cerro$POS<-droplevels(merge_cerro$POS)
geecerrocolorado<-geeglm(formula = TRATAMIENTO ~ STATUS + POS,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
merge_cerro$POS <- as.numeric(levels(merge_cerro$POS)[merge_cerro$POS]
inepcciones<-read.csv('~/Participation/inpecciones_participation_cc/inspeciones_cc_2017_jul.csv')
inepcciones<-read.csv('~/Participation/inpecciones_participation_cc/inspeciones_cc_2017_jul.csv')
inepcciones<-as.data.table(inepcciones)
inepcciones<-as.data.table(inepcciones)
veinticinco_julio<-inepcciones[FECHA=='2017-07-25']
View(inepcciones)
inepcciones<-read.csv('~/Participation/inpecciones_participation_cc/inspeciones_cc_2017_jul.csv',sep = ';')
inepcciones<-as.data.table(inepcciones)
veinticinco_julio<- inepcciones[FECHA =='2017-07-25']
write.csv('~/Participation/inpecciones_participation_cc/VEINTICINCO_JULIO.csv',row.names = FALSE)
write.csv(veinticinco_julio,'~/Participation/inpecciones_participation_cc/VEINTICINCO_JULIO.csv',row.names = FALSE)
merge_cerro<- merge_cerro[,c("UNICODE","TRATAMIENTO","STATUS","CLUSTER","LATITUDE","LONGITUDE",'POS')]
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
#########INTENT-TO-TREAT-##########################
###################################################
#eliminando de la muestra las casas adicionadas en primer y segundo ciclo
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]#47
merge_cerro<-merge_cerro[!c(added_1C=='1')]#414
#EXCLUDING HOUSES WITHOUT OUTCOME AND INHABITED
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]#11
##creating a new column "STATUS" with values : SPRAYED(1) NOT SPRAYED(0)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
#ASSIGN VALUES TO POSITIVES HOUSES IN COLUMN POS
#(SPRAYED/positive = 1, SPRAYED/negative = 0)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='1',POS:='1']
merge_cerro<- merge_cerro[,c("UNICODE","TRATAMIENTO","STATUS","CLUSTER","LATITUDE","LONGITUDE",'POS')]
View(merge_cerro)
merge_cerro<- merge_cerro[TRATAMIENTO=="Rifa",TRATAMIENTO:="1"]
merge_cerro<- merge_cerro[TRATAMIENTO=="Control",TRATAMIENTO:="0"]
View(merge_cerro)
merge_cerro$TRATAMIENTO <- droplevels(merge_cerro$TRATAMIENTO)
merge_cerro$TRATAMIENTO <- as.numeric(levels(merge_cerro$TRATAMIENTO))[merge_cerro$TRATAMIENTO]
merge_cerro$POS<-droplevels(merge_cerro$POS)
merge_cerro$POS<-as.factor(merge_cerro$POS)
merge_cerro$TRATAMIENTO <- droplevels(merge_cerro$TRATAMIENTO)
merge_cerro$TRATAMIENTO<-as.factor(merge_cerro$TRATAMIENTO)
merge_cerro$TRATAMIENTO <- droplevels(merge_cerro$TRATAMIENTO)
merge_cerro$TRATAMIENTO <- as.numeric(levels(merge_cerro$TRATAMIENTO))[merge_cerro$TRATAMIENTO]
merge_cerro$POS<-droplevels(merge_cerro$POS)
merge_cerro$POS <- as.numeric(levels(merge_cerro$POS)[merge_cerro$POS]
###FITTING GEE EQUATION #####
geecerrocolorado<-geeglm(formula = TRATAMIENTO ~ STATUS + POS,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
mi<-formula(TRATAMIENTO~STATUS+POS)
geecerrocolorado<-geeglm( mi,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
geecerrocolorado<-geeglm( mi,family = binomial(link = logit),data = merge_cerro,id = CLUSTER)
View(merge_cerro)
class(merge_cerro$POS)
geecerrocolorado_1<-gee(formula = TRATAMIENTO~STATUS,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
geecerrocolorado_1<-gee(formula = TRATAMIENTO~STATUS+POS,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
geecerrocolorado_1<-gee(formula = TRATAMIENTO+POS~STATUS,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
#########INTENT-TO-TREAT-##########################
###################################################
#eliminando de la muestra las casas adicionadas en primer y segundo ciclo
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]#47
merge_cerro<-merge_cerro[!c(added_1C=='1')]#414
#EXCLUDING HOUSES WITHOUT OUTCOME AND INHABITED
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]#11
##creating a new column "STATUS" with values : SPRAYED(1) NOT SPRAYED(0)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
#ASSIGN VALUES TO POSITIVES HOUSES IN COLUMN POS
#(SPRAYED/positive = 1, SPRAYED/negative = 0)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='1',POS:='1']
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='0'|POS_CHIRI== 'NA',POS:='0']
merge_cerro[is.na(merge_cerro$POS)]<-'2'
merge_cerro$POS<-as.factor(merge_cerro$POS)
merge_cerro[is.na(merge_cerro$POS)]<-2
View(merge_cerro)
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
#########INTENT-TO-TREAT-##########################
###################################################
#eliminando de la muestra las casas adicionadas en primer y segundo ciclo
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]#47
merge_cerro<-merge_cerro[!c(added_1C=='1')]#414
#EXCLUDING HOUSES WITHOUT OUTCOME AND INHABITED
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]#11
##creating a new column "STATUS" with values : SPRAYED(1) NOT SPRAYED(0)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
#ASSIGN VALUES TO POSITIVES HOUSES IN COLUMN POS
#(SPRAYED/positive = 1, SPRAYED/negative = 0)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='1',POS:='1']
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='0'|POS_CHIRI== 'NA',POS:='0']
merge_cerro[is.na(merge_cerro$POS)]<-'0'
View(merge_cerro)
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
#########INTENT-TO-TREAT-##########################
###################################################
#eliminando de la muestra las casas adicionadas en primer y segundo ciclo
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]#47
merge_cerro<-merge_cerro[!c(added_1C=='1')]#414
#EXCLUDING HOUSES WITHOUT OUTCOME AND INHABITED
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]#11
##creating a new column "STATUS" with values : SPRAYED(1) NOT SPRAYED(0)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
#ASSIGN VALUES TO POSITIVES HOUSES IN COLUMN POS
#(SPRAYED/positive = 1, SPRAYED/negative = 0)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='1',POS:='1']
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='0'|POS_CHIRI== 'NA',POS:='0']
merge_cerro[is.na(merge_cerro$POS)
merge_cerro$POS<-as.factor(merge_cerro$POS)
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='0'|POS_CHIRI== NA,POS:='0']
View(merge_cerro)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='0'|POS_CHIRI== ' ',POS:='0']
View(merge_cerro)
merge_cerro<-merge_cerro[POS==NA,POS:='0']
View(merge_cerro)
View(merge_cerro)
merge_cerro[is.na(merge_cerro)]<- 0
View(merge_cerro)
merge_cerro$POS<-as.factor(merge_cerro$POS)
merge_cerro$TRATAMIENTO<-as.factor(merge_cerro$TRATAMIENTO)
merge_cerro<- merge_cerro[,c("UNICODE","TRATAMIENTO","STATUS","CLUSTER","LATITUDE","LONGITUDE",'POS')]
View(merge_cerro)
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
#########INTENT-TO-TREAT-##########################
###################################################
#eliminando de la muestra las casas adicionadas en primer y segundo ciclo
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]#47
merge_cerro<-merge_cerro[!c(added_1C=='1')]#414
#EXCLUDING HOUSES WITHOUT OUTCOME AND INHABITED
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]#11
##creating a new column "STATUS" with values : SPRAYED(1) NOT SPRAYED(0)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
#ASSIGN VALUES TO POSITIVES HOUSES IN COLUMN POS
#(SPRAYED/positive = 1, SPRAYED/negative = 0)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='1',POS:='1']
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='0'|POS_CHIRI== ' ',POS:='0']
View(merge_cerro)
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
View(merge_cerro)
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv",stringsAsFactors = TRUE)
View(BASE_PAR_CC_I_II)
View(BASE_PAR_CC_I_II)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
View(BASE_PAR_CC_I_II)
BASE_PAR_CC_I_II<- read.csv("~/Participation/merge_participacion/Cerro Colorado 2016/merge_cc_II/resultados/CICLO_I_CICLO_II_CERRO_COLORADO.csv")
View(BASE_PAR_CC_I_II)
merge_cerro<-BASE_PAR_CC_I_II[,c("UNICODE","STATUS1C","ESTRATEGIA","CLUSTER","LATITUDE","LONGITUDE","STATUS_IICC","added_1C","ADD_IICICLE","POS_CHIRI")]
merge_cerro<-as.data.table(merge_cerro)
#changing name estrategie to treatment
setnames(merge_cerro,"ESTRATEGIA","TRATAMIENTO")
#categorias que se asignan a las casas
#1 TRATADA #2 RENUENTE #3 CERRADA #4 DES #5 LP #6 LV #7 P#8 V
#########INTENT-TO-TREAT-##########################
###################################################
#eliminando de la muestra las casas adicionadas en primer y segundo ciclo
merge_cerro<-merge_cerro[!c(ADD_IICICLE=='1')]#47
merge_cerro<-merge_cerro[!c(added_1C=='1')]#414
#EXCLUDING HOUSES WITHOUT OUTCOME AND INHABITED
merge_cerro<-merge_cerro[!c(STATUS1C=='4')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='7')]#3
merge_cerro<-merge_cerro[!c(STATUS1C=='8')]#11
##creating a new column "STATUS" with values : SPRAYED(1) NOT SPRAYED(0)
merge_cerro<-merge_cerro[STATUS1C=='2'|STATUS1C=='3',STATUS:='0']
merge_cerro<-merge_cerro[STATUS1C=='1',STATUS:='1']
#ASSIGN VALUES TO POSITIVES HOUSES IN COLUMN POS
#(SPRAYED/positive = 1, SPRAYED/negative = 0)
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='1',POS:='1']
merge_cerro<-merge_cerro[STATUS=='1' & POS_CHIRI=='0'|POS_CHIRI== ' ',POS:='0']
merge_cerro[is.na(merge_cerro)]<- 0
merge_cerro$POS<-as.factor(merge_cerro$POS)
merge_cerro$TRATAMIENTO<-as.factor(merge_cerro$TRATAMIENTO)
##tabulation for positive houses
#  value    0      1     NA (cerrada,renuente)
#  freq    1275   51     237
#selecting necessary fie
merge_cerro<- merge_cerro[,c("UNICODE","TRATAMIENTO","STATUS","CLUSTER","LATITUDE","LONGITUDE",'POS')]
#changing treatment :
# RIFA==1
# CONTROL==0
merge_cerro<- merge_cerro[TRATAMIENTO=="Rifa",TRATAMIENTO:="1"]
merge_cerro<- merge_cerro[TRATAMIENTO=="Control",TRATAMIENTO:="0"]
## fixing columns#####
merge_cerro$TRATAMIENTO <- droplevels(merge_cerro$TRATAMIENTO)
merge_cerro$TRATAMIENTO <- as.numeric(levels(merge_cerro$TRATAMIENTO))[merge_cerro$TRATAMIENTO]
merge_cerro$POS<-droplevels(merge_cerro$POS)
merge_cerro$POS <- as.numeric(levels(merge_cerro$POS)[merge_cerro$POS]
mi<-formula(TRATAMIENTO~STATUS+POS)
merge_cerro$POS <- as.numeric(levels(merge_cerro$POS))[merge_cerro$POS]
mi<-formula(TRATAMIENTO~STATUS+POS)
geecerrocolorado<-geeglm( mi,family = binomial(link = logit),data = merge_cerro,id = CLUSTER)
geecerrocolorado_1<-gee(mi,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
exp(confint(geecerrocolorado))
exp(coef(geecerrocolorado))
exp(coef(geecerrocolorado_1))
geecerrocolorado<-geeglm( mi,family = binomial(link = logit),data = merge_cerro,id = CLUSTER)
geecerrocolorado_1<-gee(mi,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
exp(coef(geecerrocolorado_1))
str(geecerrocolorado_1)
anova(geecerrocolorado)
m<-as.data.frame(anova(geecerrocolorado))
View(m)
exp(confint(geecerrocolorado_1))
str(geecerrocolorado_1)
sumary<-as.data.frame(summary(geecerrocolorado))
sumary<-as.matrix(summary(geecerrocolorado))
str(geecerrocolorado_1)
sumary<-as.matrix(summary(geecerrocolorado))
sumary<-as.matrix(str(geecerrocolorado))
sumary<-as.data.frame(str(geecerrocolorado))
sumary<-as.data.frame(str(geecerrocolorado_1))
View(sumary)
sumary<-as.data.frame(geecerrocolorado_1)
str(geecerrocolorado_1)
sumary<-as.data.frame(geecerrocolorado_1)
sumary<-as.matrix(geecerrocolorado_1)
View(m)
exp(coef(geecerrocolorado_1))
m<-as.data.frame(anova(geecerrocolorado_1))
View(m)
log(odd)
log(0.7288)
mi<-formula(TRATAMIENTO~POS)
geecerrocolorado_1<-gee(mi,family = binomial(link = "logit"),data = merge_cerro,id = CLUSTER)
exp(coef(geecerrocolorado_1))
Log
log(1.257)
find_algorithms(search_term = "([Pp]olygon)(centroid)")
library("raster")
library("rgdal")
library("RQGIS")
find_algorithms(search_term = "([Pp]olygon)(centroid)")
'vignette(install_guide)'
vignette(install_guide)
brew untap dakcarto/osgeo4mac
brew tap osgeo/osgeo4mac
brew tap --repair
brew install https://raw.githubusercontent.com/OSGeo/homebrew-osgeo4mac/master/Formula/<formula>.rb
install https://raw.githubusercontent.com/OSGeo/homebrew-osgeo4mac/master/Formula/<formula>.rb
find_algorithms(search_term = "([Pp]olygon)(centroid)")
library("raster")
library("rgdal")
library("RQGIS")
set_env()
find_algorithms(search_term = "([Pp]olygon)(centroid)")
get_usage(alg = "qgis:polygoncentroids")
params <- get_args_man(alg = "qgis:polygoncentroids")
params$INPUT_LAYER  <- peru3
peru3 <- getData('GADM', country=c('PER'), level=3)
params$INPUT_LAYER  <- peru3
params$OUTPUT_LAYER <- file.path('~/CLAUDIA-DATOS-/claudia codigos r/PRUEBAS/', "PERU_coords.shp")
out <- run_qgis(alg = "qgis:polygoncentroids",
params = params,
load_output = TRUE)
out
View(out)
homebrew:'https://github.com/OSGeo/homebrew-osgeo4mac'
homebrew:'https://github.com/OSGeo/homebrew-osgeo4mac'
vignette(install_guide)
[1] "/Users/jennip/CLAUDIA-DATOS-/claudia codigos r/PRUEBAS//PERU_coords.shp"
poligon<-fread('~/CLAUDIA-DATOS-/claudia codigos r/Manzanas _Arequipa/Miraflores/Miraflores_mz.csv')
poly_sf_1<-st_sf(st_sfc(st_polygon(list(poligon))))
library(raster)
poly_sf_1<-st_sf(st_sfc(st_polygon(list(poligon))))
poligon<-st_sf(st_sfc(st_polygon(list(poligon))))
poligon<-poligon[,LISTA:=list(c(long,lat),1)]
library(sf)
poligon<-fread('~/CLAUDIA-DATOS-/claudia codigos r/Manzanas _Arequipa/Miraflores/Miraflores_mz.csv')
library(data.table)
poligon<-fread('~/CLAUDIA-DATOS-/claudia codigos r/Manzanas _Arequipa/Miraflores/Miraflores_mz.csv')
poligon<-poligon[!is.na(lat)]
poly_sf<-st_polygon(x =poligon )
poligon<-poligon[,LISTA:=list(c(long,lat),1)]
View(poligon)
install.packages("RQGIS")
install.packages("RQGIS")
library("raster")
library("rgdal")
library("RQGIS")
set_env()
find_algorithms(search_term = "([Pp]olygon)(centroid)")
get_usage(alg = "qgis:polygoncentroids")
params$INPUT_LAYER  <- poligon
params$OUTPUT_LAYER <- file.path('~/CLAUDIA-DATOS-/claudia codigos r/PRUEBAS/', "PERU_coords.shp")
find_algorithms(search_term = "([Pp]olygon)(centroid)")
get_usage(alg = "qgis:polygoncentroids")
params <- get_args_man(alg = "qgis:polygoncentroids")
params$INPUT_LAYER  <- poligon
params$OUTPUT_LAYER <- file.path('~/CLAUDIA-DATOS-/claudia codigos r/PRUEBAS/', "arequipa_coords.shp")
out <- run_qgis(alg = "qgis:polygoncentroids",
params = params,
load_output = TRUE)
$OUTPUT_LAYER
out
View(poligon)
library("rgdal")
shp <- readOGR("nybb_13a", "nybb")
setwd('~/CLAUDIA-DATOS-/claudia codigos r/Manzanas _Arequipa/')
shp <- readOGR("Miraflores/Miraflores_mz.kml")
proj4string(shp)
poi <- data.frame(x=c(919500, 959500, 1019500, 1049500, 1029500, 989500),
y=c(130600, 150600, 180600, 198000, 248000, 218000),
id="A", stringsAsFactors=F)
View(poi)
coordinates(poligon) <- ~ x + y
coordinates(poligon) <- ~ lon + lat
coordinates(poligon) <- ~ 'lon' + 'lat'
View(poligon)
