install.packages("spatialEco")
install.packages("sp")
library(spatialEco)
library(sp)
library(sp)
install.packages("sp")
library(spatialEco)
library(sp)
#-RUTAS UTILIZADAS
ruta_1 <- 'C:/Users/Rodrigo/Documents/claudia codigos r'
#Ruta
setwd(ruta_1)
#Leer los archivos
#Base de datos del consolidado 2009-2015
attack_db <- read.csv("C:/Users/Rodrigo/Documents/claudia codigos r/cons_rociado_2009_2015.csv")
casas_aqp<-read.csv("C:/Users/Rodrigo/Documents/claudia codigos r/AREQUIPA_GPS_GOOGLE.csv")
casas_aqp_adicionadas <- read.csv("C:/Users/Rodrigo/Documents/claudia codigos r/added_aqpI.csv")
#nc_hunter<-read.csv("C:/Users/Rodrigo/Documents/claudia codigos r/Manzanas _Arequipa/Jacobo Hunter/Jacobo Hunter MZ.csv")
nc_cayma<-read.csv("C:/Users/Rodrigo/Documents/claudia codigos r/Manzanas _Arequipa/Cayma/Cayma_Mz.csv")
nc_cayma$lat <- gsub(" ","",nc_cayma$lat, fixed = T)
nc_cayma$long <- gsub(" ","",nc_cayma$long, fixed = T)
n_row<-nrow(nc_cayma)
n_col<- ncol(nc_cayma)
for(i in 1:n_row) {
for (j in 1:n_col) {
if (nc_cayma[i,][,j] == ""){
nc_cayma[i,][,j] <- NA
}
}
}
View(nc_cayma)
attack_cayma <- attack_db[(1==attack_db$P & 3==attack_db$D),]
attack_cayma <- attack_cayma[,c("UNICODE", "I_TRIAT", "P_TRIAT", "FECHA", "CICLO")]
casas_aqp_total <- rbind(casas_aqp, casas_aqp_adicionadas)
#Verificar si hay duplicados
indice_dupli <- casas_aqp[which(duplicated(casas_aqp$UNICODE)),1]
duplicados<-casas_aqp[casas_aqp$UNICODE %in% indice_dupli,]
duplicados <- duplicados[order(duplicados$UNICODE),]
indice_dupli <- casas_aqp_total[which(duplicated(casas_aqp_total$UNICODE)),1]
duplicados<-casas_aqp_total[casas_aqp_total$UNICODE %in% indice_dupli,]
duplicados <- duplicados[order(duplicados$UNICODE),]
#Bases utilizadas en el proceso
#nc_cayma <- nc_cayma[,c("type","ident","lat","long","y_proj","x_proj","new_seg","display","color","altitude","depth","temp","time","model","filename","ltime")]
nc_polygon <- nc_cayma
old_casa_aqp <- casas_aqp_total
#Convirtiendo de factor a character o numero a caracter
nc_polygon$ident <- as.character(nc_polygon$ident)
nc_polygon$long <- as.character(nc_polygon$long)
nc_polygon$lat <- as.character(nc_polygon$lat)
casas_aqp$D <- as.character(casas_aqp$D)
casas_aqp$L <- as.character(casas_aqp$L)
#Creando columna para el numero de localidad y de cuadra
nc_polygon$num_distrito <- NA
nc_polygon$num_localidad <- NA
nc_polygon$num_cuadra <- NA
#Creando variables
x<-NULL
y<-NULL
distrito <- 0
localidad <- 0
aqp_gps_block <- data.frame()
aux <- data.frame()
no_block <- data.frame()#Alamcenaremos los que no tienen cuadra
inicio <-1#si tiene 1 es por que es un primer elemento
n_row <- nrow(nc_polygon)+1
i<-1 #Controlador del bucle
while (i <= n_row) {
if (!is.na(nc_polygon$long[i])) {
#Acumulando los "x" e "y"
x<-c(x,nc_polygon$long[i])#Longitud
y<-c(y,nc_polygon$lat[i])#Latitud
} else{
if(1!=inicio){
#Pregunta si tienen el mismo distrito y localidad, si no entonces se extrae otra porcion de viviendas
if (distrito!=nc_polygon$num_distrito[indice] | localidad!=nc_polygon$num_localidad[indice]) {
no_block <- rbind(no_block,aux)
aux <- old_casa_aqp[nc_polygon$num_distrito[indice]== old_casa_aqp$D & nc_polygon$num_localidad[indice]== old_casa_aqp$L,]
aux$block <- NA
old_casa_aqp <- old_casa_aqp[!(nc_polygon$num_distrito[indice]== old_casa_aqp$D & nc_polygon$num_localidad[indice]== old_casa_aqp$L),]
}
for (j in 1:nrow(aux)) {
#Utilizando la funcion "point.in.polygon" para ver si el punto esta dentro del poligono
opcion <- point.in.polygon(aux$LONGITUDE[j],aux$LATITUDE[j], x,y)
if (0!=opcion) {
aux$block[j] <- nc_polygon$num_cuadra[indice]
}
}
#Almacenando los puntos que tienen numero de cuadra en una base de datos final
aqp_gps_block <- rbind(aqp_gps_block,aux[!is.na(aux$block),])
#Alamcenando los codigos que aun falta poner cuadra
aux <- aux[is.na(aux$block),]
#Inicializando los puntos del poligono
x<-NULL
y<-NULL
#Almacenando distrito y localidad
distrito <- nc_polygon$num_distrito[indice]
localidad <- nc_polygon$num_localidad[indice]
}
if (i < n_row) {
#Separar donde encuentre el caracter "-"
split_ident <- unlist(strsplit(nc_polygon$ident[i], "-", fixed = TRUE))
#Si es distinto a NA continuarÃ¡ el ciclo, pueden haber nombre que NO contengan el caracter "-"
if (!is.na(split_ident[2])) {
#Revisando si existe una letra
letter_number <- regexpr("[A-Za-z]", split_ident[2])
#Pregunta si el segundo argumento es numero
if (  letter_number[1]==-1 ) {
#Separando el codigo por cada punto
codigo <- unlist(strsplit(split_ident[1], ".", fixed = TRUE))
#Almacenando numero de distrito
nc_polygon$num_distrito[i] <- codigo[2]
#Almacenando numero de localidad
nc_polygon$num_localidad[i] <- codigo[3]
#Almacenando el numero de cuadra
nc_polygon$num_cuadra[i] <- split_ident[2]
#Almacenando indice
indice <- i
inicio <- 0
} else {
while (!is.na(nc_polygon$long[i+1])) {
i<-i+1
inicio <-1
}
}
} else {
while (!is.na(nc_polygon$long[i+1])) {
i<-i+1
inicio <-1
}
}
}
}
i<-i+1
}
setwd("C:/Users/Rodrigo/Documents/claudia codigos r/Manzanas _Arequipa/Cayma/Cayma_Mz.csv")
setwd("/Users/Rodrigo/Documents/claudia codigos r/Manzanas _Arequipa/Cayma/Cayma_Mz.csv")
setwd("C:/Users/Rodrigo/Documents/claudia codigos r/Manzanas _Arequipa/Cayma")
Cayma_Mz <- read.csv("Cayma_Mz.csv")
View(Cayma_Mz)
blank_to_NA <- function(database) {
num_row <- nrow(database)
num_col <- ncol(database)
for (i in 1:num_row) {
for (j in 1:num_col) {
if (database[i,j] == " ") {
database[i,j] <- "NA"
}
else if (database[i,j] == "") {
database[i,j] <- "NA"
}
}
}
return(database)
}
View(Cayma_Mz)
blank_to_NA <- function(Cayma_Mz) {
num_row <- nrow(Cayma_Mz)
num_col <- ncol(Cayma_Mz)
for (i in 1:num_row) {
for (j in 1:num_col) {
if (Cayma_Mz[i,j] == " ") {
Cayma_Mz[i,j] <- "NA"
}
else if (Cayma_Mz[i,j] == "") {
Cayma_Mz[i,j] <- "NA"
}
}
}
return(Cayma_Mz)
}
View(Cayma_Mz)
blank_to_NA <- function(Cayma_Mz) {
num_row <- nrow(Cayma_Mz)
num_col <- ncol(Cayma_Mz)
for (i in 1:num_row) {
for (j in 1:num_col) {
if (Cayma_Mz[i,j] == " ") {
Cayma_Mz[i,j] <- "NA"
}
else if (Cayma_Mz[i,j] == "") {
Cayma_Mz[i,j] <- "NA"
}
}
}
return(Cayma_Mz)
}
View(blank_to_NA)
function(Cayma_Mz) {
num_row <- nrow(Cayma_Mz)
num_col <- ncol(Cayma_Mz)
for (i in 1:num_row) {
for (j in 1:num_col) {
if (Cayma_Mz[i,j] == " ") {
Cayma_Mz[i,j] <- "NA"
}
else if (Cayma_Mz[i,j] == "") {
Cayma_Mz[i,j] <- "NA"
}
}
}
return(Cayma_Mz)
}
setwd("C:/Users/Rodrigo/Documents/claudia codigos r/Manzanas _Arequipa/Cayma")
Cayma_Mz <- read.csv("Cayma_Mz.csv")
blank_to_NA <- function(Cayma_Mz) {
num_row <- nrow(Cayma_Mz)
num_col <- ncol(Cayma_Mz)
for (i in 1:num_row) {
for (j in 1:num_col) {
if (Cayma_Mz[i,j] == " ") {
Cayma_Mz[i,j] <- "NA"
}
else if (Cayma_Mz[i,j] == "") {
Cayma_Mz[i,j] <- "NA"
}
}
}
return(Cayma_Mz)
}
View(Cayma_Mz)
View(blank_to_NA)
View(blank_to_NA)
View(blank_to_NA)
blank_to_NA <- function(Cayma_Mz) {
num_row <- nrow(Cayma_Mz)
num_col <- ncol(Cayma_Mz)
for (i in 1:num_row) {
for (j in 1:num_col) {
if (Cayma_Mz[i,j] == " ") {
Cayma_Mz[i,j] <- "NA"
}
else if (Cayma_Mz[i,j] == "") {
Cayma_Mz[i,j] <- "NA"
}
}
}
return(Cayma_Mz)
}
blank_to_NA(Cayma_Mz)
View(Cayma_Mz)
warning()
warnings()
Cayma_Mz<-blank_to_NA(Cayma_Mz)
blank_to_NA <- function(Cayma_Mz) {
num_row <- nrow(Cayma_Mz)
num_col <- ncol(Cayma_Mz)
for (i in 1:num_row) {
for (j in 1:num_col) {
if (Cayma_Mz[i,j] == " ") {
Cayma_Mz[i,j] <- NA
}
else if (Cayma_Mz[i,j] == "") {
Cayma_Mz[i,j] <- NA
}
}
}
return(Cayma_Mz)
}
View(blank_to_NA)
Cayma_Mz<-blank_to_NA(Cayma_Mz)
Cayma_Mz[i,j] == " "
for (i in 1:num_row) {
for (j in 1:num_col) {
Cayma_Mz[i,j] == " "
setwd("C:/Users/Rodrigo/Documents/claudia codigos r/Manzanas _Arequipa/Cayma")
Cayma_Mz <- read.csv("Cayma_Mz.csv")
blank_to_NA <- function(Cayma_Mz) {
num_row <- nrow(Cayma_Mz)
num_col <- ncol(Cayma_Mz)
for (i in 1:num_row) {
for (j in 1:num_col) {
if (Cayma_Mz[i,j] == " ") {
Cayma_Mz[i,j] <- NA
}
else if (Cayma_Mz[i,j] == "") {
Cayma_Mz[i,j] <- NA
}
}
}
return(Cayma_Mz)
}
setwd("C:/Users/Rodrigo/Documents/claudia codigos r/Manzanas _Arequipa/Cayma")
