{
    "collab_server" : "",
    "contents" : "\n##BD MINSA\n\n#-RUTAS UTILIZADAS\nruta_1 <- '/home/javier/Documentos/github/Participation/bd_minsa/minsa_ccolorado/'\n\n#-------------------------------------------------------------------\n#============ Funcion CreateUnicode =========================================\n# Solo si la data tiene la columna \"CODCNSLDD\"\n#--------------------------------------------------------------------\nCreateUnicode<-function(data) {\n  #Esta funcion retorna un data frame con los con el UNICODE\n  #\n  #ARGS\n  # data = La base donde se desea obtener el UNICODE\n  #\n  #RETURNS\n  # data = Con las columnas UNICODE, P, D, L, V al inicio del dataframe\n  #\n  \n  #Separando en \"P\", \"D\", \"L\" y \"V\"\n  data$P<-substr(data$CODCNSLDD,1,1)\n  data$D<-substr(data$CODCNSLDD,2,3)\n  data$L<-substr(data$CODCNSLDD,4,5)\n  data$V<-data$CODIGO\n  \n  #Eliminado espacios en blanco\n  data$D <- gsub(\" \",\"\",data$D, fixed = T)\n  data$L <- gsub(\" \",\"\",data$L, fixed = T)\n  data$V <- gsub(\" \",\"\",data$V, fixed = T) \n  \n  #Contruyendo UNICODE\n  data$UNICODE<-paste(data$P, data$D, data$L, data$V, sep = \".\")\n  \n  #Ordenando Las columnas\n  n_col <- length(data)\n  data <- data[, c(n_col, n_col-4,n_col-3,n_col-2,n_col-1, 1:(n_col-5) )]\n  \n  return(data)\n}\n#=========================================================================\n\n#----------------------------------------------------------------------------\n#============ Funcion ELIMINAR DUPLICADOS UNICODE X STATUS ==================\n# Requerimientos:\n#   - Las bases de datos deben contener las columna \"UNICODE\", \"STATUS\", \"POS_CHIRI\"\n#--------------------------------------------------------------------\nElimDupliUxS<-function(data) {\n  #Esta funcion retorna un data frame con los datos de unicode UNICOS poniendo en prioridad el STATUS de las viviendas \n  #(\"T\", \"R\", \"C\", \"DES\", \"LP\", \"LV\"), para con esto seleccionar el duplicado que debe quedar en el data.frame de respuesta\n  #\n  #ARGS\n  # data = Data frame conteniendo los datos\n  #\n  #RETURNS\n  # data_sindupli = Data frame sin duplicados\n  #\n  \n  #Obtenemos en un array todos los UNICODEs que son duplicados\n  uni_dupli <- unique(data$UNICODE[which(duplicated(data$UNICODE))])\n  \n  #Almacenamos en una variable los datos que NO contienen UNICODEs duplicados\n  data_sindupli <- data[!(data$UNICODE %in% uni_dupli),]\n  \n  #Almacenamos en una variable todos los registros que SI son duplicados\n  data_condupli <- data[data$UNICODE %in% uni_dupli,]\n  \n  #Trabajamos con los duplicados\n  #Dando prioridad a los UNICODEs que son tratadas(STATUS=1) y positivas (POS_CHIRI=1)\n  variable <- data_condupli[1 == data_condupli$STATUS & 1 == data_condupli$POS_CHIRI,]\n  #Juntamos solo las viviendas sin duplicados, dependiendo de la prioridad del STATUS (T, R, C, DES, LP, LV)\n  i <- 1\n  while (length(uni_dupli)) {\n    #Almacenamos los datos sin duplicados\n    data_sindupli <- rbind(data_sindupli,variable)\n    #Actualizando variables\n    uni_dupli <- setdiff(uni_dupli, variable$UNICODE)\n    x <- data[data$UNICODE %in% uni_dupli,]\n    data_condupli <- data_condupli[data_condupli$UNICODE %in% uni_dupli,]\n    variable <- data_condupli[i == data_condupli$STATUS,]\n    i <- i+1\n  }\n  \n  return(data_sindupli)\n}\n#=========================================================================\n\n# install.packages (“foreign”) #Instalar el paquete que nos permite abrir archivos \".dbf\"\nlibrary(foreign) #Llamando al paquete\n\n#Ruta\nsetwd(ruta_1)\n\n#Obtenemos las bases que nos interesan\nt_dist<- read.dbf(path.expand(\"control/t_dist.dbf\"), as.is = TRUE)#contiene los códigos y nombre de distritos, formulacion de insecticida\nt_loc<- read.dbf(path.expand(\"control/t_loc.dbf\"), as.is = TRUE)#contiene nombre de localidades, codigo distrito, y nro de viv total de las loc\nt_roc<- read.dbf(path.expand(\"control/t_roc.dbf\"), as.is = TRUE)#contiene códigos y nombres de los rociadores\nt_mat<- read.dbf(path.expand(\"control/t_mat.dbf\"), as.is = TRUE)#contiene el código y el nombre de los materiales de las viviendas\ntd_cnsldd<- read.dbf(path.expand(\"control/td_cnsldd.dbf\"), as.is = TRUE)#tabla de consolidación donde se encuentra la mayoría de la información\nth_cnsldd<- read.dbf(path.expand(\"control/th_cnsldd.dbf\"), as.is = TRUE)#contiene las fechas de rociado de las viviendas, ciclo de rociado \n\n#Eliminando inconsistencias en bases foxpro\nt_dist<- t_dist[!grepl(\"00015\", t_dist$CODDIST, fixed = TRUE),]#Eliminamos duplicadado \"Cerro Colorado\"\nt_loc<- t_loc[!grepl(\"00194\", t_loc$CODLOC, fixed = TRUE),]#Eliminamos \"Huanca-Murco\"\nt_loc<- t_loc[!grepl(\"00195\", t_loc$CODLOC, fixed = TRUE),]#Eliminamos duplicadado \"Canco\"\nt_loc<- t_loc[!grepl(\"00196\", t_loc$CODLOC, fixed = TRUE),]#Eliminamos \"Huambo-Canca\"\nt_roc<- t_roc[!(grepl('00081', t_roc$CODROC, fixed = TRUE) & grepl('Pepe Quintanilla', t_roc$ROCIADOR, fixed = TRUE)),]#Eliminamos codigo \"00081\" con \"Pepe Quintanilla\" ya que se repite con otro codigo igual\nt_roc<- t_roc[!grepl(\"Andy\", t_roc$ROCIADOR, fixed = TRUE),]#Eliminamos \"Andy Catacora\" nunca rocea\n\n#Reemplazando tildes\nt_dist$INSECTICID<-enc2utf8(t_dist$INSECTICID)\nt_dist$INSECTICID<- gsub(\"<ed>\",\"i\",t_dist$INSECTICID)#reemplazando la vocal \"i\"\nt_loc$LOCALIDAD<- enc2utf8(t_loc$LOCALIDAD)\nt_loc$LOCALIDAD<- gsub(\"<e1>\",\"a\",t_loc$LOCALIDAD)#reemplazando \"á\" por \"a\"\nt_loc$LOCALIDAD<- gsub(\"<e9>\",\"e\",t_loc$LOCALIDAD)#reemplazando \"é\" por \"e\"\nt_loc$LOCALIDAD<- gsub(\"<ed>\",\"i\",t_loc$LOCALIDAD)#reemplazando \"í\" por \"i\"\nt_loc$LOCALIDAD<- gsub(\"<f3>\",\"o\",t_loc$LOCALIDAD)#reemplazando \"ó\" por \"o\"\nt_loc$LOCALIDAD<- gsub(\"<fa>\",\"u\",t_loc$LOCALIDAD)#reemplazando \"ú\" por \"u\"\nt_loc$LOCALIDAD<- gsub(\"<f1>\",\"ni\",t_loc$LOCALIDAD)#reemplazando \"ñ\" por \"ni\"\nt_roc$ROCIADOR<- enc2utf8(t_roc$ROCIADOR)\nt_roc$ROCIADOR<- gsub(\"<e1>\",\"a\",t_roc$ROCIADOR)#reemplazando \"á\" por \"a\"\nt_roc$ROCIADOR<- gsub(\"<e9>\",\"e\",t_roc$ROCIADOR)#reemplazando \"é\" por \"e\"\nt_roc$ROCIADOR<- gsub(\"<ed>\",\"i\",t_roc$ROCIADOR)#reemplazando \"í\" por \"i\"\nt_roc$ROCIADOR<- gsub(\"<f3>\",\"o\",t_roc$ROCIADOR)#reemplazando \"ó\" por \"o\"\nt_roc$ROCIADOR<- gsub(\"<fa>\",\"u\",t_roc$ROCIADOR)#reemplazando \"ú\" por \"u\"\nt_roc$ROCIADOR<- gsub(\"<f1>\",\"ni\",t_roc$ROCIADOR)#reemplazando \"ñ\" por \"ni\"\nt_mat$MATERIAL<- enc2utf8(t_mat$MATERIAL)\nt_mat$MATERIAL<- gsub(\"<f3>\",\"o\",t_mat$MATERIAL)#reemplazando \"ó\" por \"o\"\ntd_cnsldd$JEFEVIV<- enc2utf8(td_cnsldd$JEFEVIV)\ntd_cnsldd$JEFEVIV<- gsub(\"<e1>\",\"a\",td_cnsldd$JEFEVIV)#reemplazando \"á\" por \"a\"\ntd_cnsldd$JEFEVIV<- gsub(\"<e9>\",\"e\",td_cnsldd$JEFEVIV)#reemplazando \"é\" por \"e\"\ntd_cnsldd$JEFEVIV<- gsub(\"<ed>\",\"i\",td_cnsldd$JEFEVIV)#reemplazando \"í\" por \"i\"\ntd_cnsldd$JEFEVIV<- gsub(\"<f3>\",\"o\",td_cnsldd$JEFEVIV)#reemplazando \"ó\" por \"o\"\ntd_cnsldd$JEFEVIV<- gsub(\"<fa>\",\"u\",td_cnsldd$JEFEVIV)#reemplazando \"ú\" por \"u\"\ntd_cnsldd$JEFEVIV<- gsub(\"<f1>\",\"ni\",td_cnsldd$JEFEVIV)#reemplazando \"ñ\" por \"ni\"\ntd_cnsldd$IN_MAT<- enc2utf8(td_cnsldd$IN_MAT)\ntd_cnsldd$IN_MAT<- gsub(\"<f3>\",\"o\",td_cnsldd$IN_MAT)#reemplazando \"ó\" por \"o\"\ntd_cnsldd$PE_MAT<- enc2utf8(td_cnsldd$PE_MAT)\ntd_cnsldd$PE_MAT<- gsub(\"<f3>\",\"o\",td_cnsldd$PE_MAT)#reemplazando \"ó\" por \"o\"\n\n#Seleccionado solo columnas con datos\ndistrito<- t_dist[,c(\"CODDIST\",\"DISTRITO\",\"CODIGO\",\"CODPRV\",\"CODNSTCD\",\"INSECTICID\")]\nlocalidad<- t_loc[,c(\"CODLOC\",\"LOCALIDAD\",\"CODIGO\",\"NUMVIV\",\"CODDIST\",\"CODINT\")]\nmateriales<-t_mat[,c(\"CODMAT\",\"MATERIAL\")]\nrociador<-t_roc[,c(\"CODROC\",\"ROCIADOR\",\"BOSSONOFF\")]\nfecha_roc_minsa<-th_cnsldd[,c(\"NUMERO\",\"CODCNSLDD\",\"CODPRV\",\"CODDIST\",\"CODLOC\",\"CODROC\",\"CICLO\",\"FECHA\",\"CODNSTCD\",\"SAVED\",\"CODJEF\",\"INICIO\",\"FINAL\")]\ncons_roc_minsa<-td_cnsldd[,c(\"CODCNSLDD\",\"CODIGO\",\"SEEKVIV\",\"CODVIV\",\"JEFEVIV\",\"NUMRES\",\"IN_AMB\",\"IN_MAT\",\"IN_GRI\",\"IN_TRI\",\"PE_AMB\",\"PE_MAT\",\"PE_GRI\",\"PE_TRI\",\"AN_TEC\",\"AN_PAT\",\"TRARES_T\",\"TRARES_RR\",\"CARGANSTCD\",\"SUPER\",\"NOTAS\",\"NUMREC\",\"IN_CODMAT\",\"PE_CODMAT\",\"CICLO\")]\n\n#---------------------------------------------------------------------#\n#-------                fecha_roc_minsa                      ---------#\n#---------------------------------------------------------------------#\n#Separando la fecha\nfecha_roc_minsa$FR_A<-format( fecha_roc_minsa$FECHA, format=\"%Y\" ) \nfecha_roc_minsa$FR_M<-format( fecha_roc_minsa$FECHA, format=\"%m\" ) \nfecha_roc_minsa$FR_D<-format( fecha_roc_minsa$FECHA, format=\"%d\" ) \n#Merge entre \"fecha_roc_minsa\" y \"rociador\"\nfecha<- merge(fecha_roc_minsa,rociador)\nfecha<-fecha[,c(3,8,14:16,1,17,12,13)]\n\n#---------------------------------------------------------------------#\n#--------                  cons_roc_minsa                    ---------#\n#---------------------------------------------------------------------#\n#Se selecciona solo los que tienen \"0\" los demas son sumatorias de este.\ncons_roc_minsa<-cons_roc_minsa[0==cons_roc_minsa$NUMREC,]\n\n#Separando en \"P\", \"D\", \"L\" y \"V\"\ncons_roc_minsa$P<-substr(cons_roc_minsa$CODCNSLDD,1,1)\ncons_roc_minsa$D<-substr(cons_roc_minsa$CODCNSLDD,2,3)\ncons_roc_minsa$L<-substr(cons_roc_minsa$CODCNSLDD,4,5)\ncons_roc_minsa$V<-cons_roc_minsa$CODIGO\n\n#Eliminado espacios en blanco\ncons_roc_minsa$D <- gsub(\" \",\"\",cons_roc_minsa$D, fixed = T)\ncons_roc_minsa$L <- gsub(\" \",\"\",cons_roc_minsa$L, fixed = T)\ncons_roc_minsa$V <- gsub(\" \",\"\",cons_roc_minsa$V, fixed = T)\n\n#Contruyendo UNICODE\ncons_roc_minsa$UNICODE<-paste(cons_roc_minsa$P, cons_roc_minsa$D, cons_roc_minsa$L, cons_roc_minsa$V, sep = \".\")\n\n#Completando ciclos de rociado I y II\ncons_roc_minsa$CICLO_ROCIADO<-substr(cons_roc_minsa$CODCNSLDD,8,8)#comprobado que salen bien\n\n#Creando columna \"MAS20TRI_IN\" y \"MAS20TRI_PE\"\ncons_roc_minsa$MAS20TRI_IN<- unlist(0)\ncons_roc_minsa$MAS20TRI_PE<- unlist(0)\ncons_roc_minsa[grepl(\"+\",cons_roc_minsa$IN_TRI, fixed = TRUE),\"MAS20TRI_IN\"]<- 1\ncons_roc_minsa[grepl(\"+\",cons_roc_minsa$PE_TRI, fixed = TRUE),\"MAS20TRI_PE\"]<- 1\n\n#Creando columnas de materiales en el INTRA y asignando su valor\ncons_roc_minsa$IN_SIL<- unlist(0)\ncons_roc_minsa$IN_NOB<- unlist(0)\ncons_roc_minsa$IN_LAD<- unlist(0)\ncons_roc_minsa$IN_ADO<- unlist(0)\ncons_roc_minsa$IN_BLOQ<- unlist(0)\ncons_roc_minsa[grepl(\"Sillar\",cons_roc_minsa$IN_MAT, fixed = TRUE),\"IN_SIL\"]<- 1\ncons_roc_minsa[grepl(\"Noble\",cons_roc_minsa$IN_MAT, fixed = TRUE),\"IN_NOB\"]<- 1\ncons_roc_minsa[grepl(\"Ladrillo\",cons_roc_minsa$IN_MAT, fixed = TRUE),\"IN_LAD\"]<- 1\ncons_roc_minsa[grepl(\"Adobe\",cons_roc_minsa$IN_MAT, fixed = TRUE),\"IN_ADO\"]<- 1\ncons_roc_minsa[grepl(\"Bloqueta\",cons_roc_minsa$IN_MAT, fixed = TRUE),\"IN_BLOQ\"]<- 1\n\n#Creando columnas de materiales en el PERI y asignando su valor\ncons_roc_minsa$PE_SIL<- unlist(0)\ncons_roc_minsa$PE_NOB<- unlist(0)\ncons_roc_minsa$PE_LAD<- unlist(0)\ncons_roc_minsa$PE_ADO<- unlist(0)\ncons_roc_minsa$PE_BLOQ<- unlist(0)\ncons_roc_minsa$PE_PIE<- unlist(0)\ncons_roc_minsa[grepl(\"Sillar\",cons_roc_minsa$PE_MAT, fixed = TRUE),\"PE_SIL\"]<- 1\ncons_roc_minsa[grepl(\"Noble\",cons_roc_minsa$PE_MAT, fixed = TRUE),\"PE_NOB\"]<- 1\ncons_roc_minsa[grepl(\"Ladrillo\",cons_roc_minsa$PE_MAT, fixed = TRUE),\"PE_LAD\"]<- 1\ncons_roc_minsa[grepl(\"Adobe\",cons_roc_minsa$PE_MAT, fixed = TRUE),\"PE_ADO\"]<- 1\ncons_roc_minsa[grepl(\"Bloqueta\",cons_roc_minsa$PE_MAT, fixed = TRUE),\"PE_BLOQ\"]<- 1\ncons_roc_minsa[grepl(\"Piedra\",cons_roc_minsa$PE_MAT, fixed = TRUE),\"PE_PIE\"]<- 1\n\n#Creando columnas de animales en el TECHO y asignando su valor\ncons_roc_minsa$TEC_CUY<- unlist(0)\ncons_roc_minsa$TEC_CON<- unlist(0)\ncons_roc_minsa$TEC_OVE<- unlist(0)\ncons_roc_minsa$TEC_PER<- unlist(0)\ncons_roc_minsa$TEC_AVE<- unlist(0)\ncons_roc_minsa$TEC_GAT<- unlist(0)\ncons_roc_minsa[grepl(\"Cuyes\",cons_roc_minsa$AN_TEC, fixed = TRUE),\"TEC_CUY\"]<- 1\ncons_roc_minsa[grepl(\"Conejos\",cons_roc_minsa$AN_TEC, fixed = TRUE),\"TEC_CON\"]<- 1\ncons_roc_minsa[grepl(\"Ovejas\",cons_roc_minsa$AN_TEC, fixed = TRUE),\"TEC_OVE\"]<- 1\ncons_roc_minsa[grepl(\"Perros\",cons_roc_minsa$AN_TEC, fixed = TRUE),\"TEC_PER\"]<- 1\ncons_roc_minsa[grepl(\"Aves\",cons_roc_minsa$AN_TEC, fixed = TRUE),\"TEC_AVE\"]<- 1\ncons_roc_minsa[grepl(\"Gatos\",cons_roc_minsa$AN_TEC, fixed = TRUE),\"TEC_GAT\"]<- 1\n\n#Creando columnas de animales en el PATIO y asignando su valor\ncons_roc_minsa$PAT_CUY<- unlist(0)\ncons_roc_minsa$PAT_CON<- unlist(0)\ncons_roc_minsa$PAT_OVE<- unlist(0)\ncons_roc_minsa$PAT_PER<- unlist(0)\ncons_roc_minsa$PAT_AVE<- unlist(0)\ncons_roc_minsa$PAT_GAT<- unlist(0)\ncons_roc_minsa[grepl(\"Cuyes\",cons_roc_minsa$AN_PAT, fixed = TRUE),\"PAT_CUY\"]<- 1\ncons_roc_minsa[grepl(\"Conejos\",cons_roc_minsa$AN_PAT, fixed = TRUE),\"PAT_CON\"]<- 1\ncons_roc_minsa[grepl(\"Ovejas\",cons_roc_minsa$AN_PAT, fixed = TRUE),\"PAT_OVE\"]<- 1\ncons_roc_minsa[grepl(\"Perros\",cons_roc_minsa$AN_PAT, fixed = TRUE),\"PAT_PER\"]<- 1\ncons_roc_minsa[grepl(\"Aves\",cons_roc_minsa$AN_PAT, fixed = TRUE),\"PAT_AVE\"]<- 1\ncons_roc_minsa[grepl(\"Gatos\",cons_roc_minsa$AN_PAT, fixed = TRUE),\"PAT_GAT\"]<- 1\n\n#CONSOLIDADO FINAL\nCONS_ROCIADO_2009_2015<- merge(cons_roc_minsa, fecha)\nCONS_ROCIADO_2009_2015<- CONS_ROCIADO_2009_2015[,c(30,26:29,57:60,62,5:8,34:38,9,10,32,11,12,39:44,13,14,33,15,45:50,16,51:56,31,19:21)]# Tener cuidado cuando las tablas cambien de tamanio ya que esta en numeros\n#Obteniendo solo las filas que son unicas, eliminando duplicados de filas\nCONS_ROCIADO_2009_2015<- unique(CONS_ROCIADO_2009_2015)# se eliminaron 1274 registros\n\n#Filtrando para que no se esté buscando localidades que no estan en el estudio en ASA\nfiltro<-function(dat,dentro)\n{\n  filtrado<-dat[(1==dat$P & 4==dat$D & is.element(dat$L,dentro)==TRUE),]\n  return(filtrado)\n}\ndentro<-c(14,15,16,17,20,21,24,37,40,41,43,45,47,51,52)\n#Aplicando funcion filtro\ntratadas_CC<-filtro(CONS_ROCIADO_2009_2015,dentro)\n\nwrite.csv(tratadas_CC,\"tratadas_CC.csv\", row.names=F)\n\nuni_tratadas_CC <- tratadas_CC$UNICODE\n\ndif_unicol_tccminsa <- setdiff(uni_colector,uni_tratadas_CC)\ndif_tccminsa_unicol <- setdiff(uni_tratadas_CC, uni_colector)\n\n#--------------------------------hasta aqui las tratadas del MINSA I Ciclo\n# cuandfo se tenga las cerradas, renuentes del MINSA (oficial) se continua\n\n\n  #--------------------------------------------------------------------------------------\n# Solo que tengan las columnas UNICODE, CICLO y STATUS\n#--------------------------------------------------------------------------------------\n#Cerradas \ntdc_cnsldd<- read.dbf(path.expand(\"control/tdc_cnsldd.dbf\"), as.is = TRUE)\n#Renuente\ntdr_cnsldd<- read.dbf(path.expand(\"control/tdr_cnsldd.dbf\"), as.is = TRUE)\n#Deshabitada \ntdd_cnsldd<- read.dbf(path.expand(\"control/tdd_cnsldd.dbf\"), as.is = TRUE)\n#Local publico\ntdp_cnsldd<- read.dbf(path.expand(\"control/tdp_cnsldd.dbf\"), as.is = TRUE)\n#Lote vacio\ntdv_cnsldd<- read.dbf(path.expand(\"control/tdv_cnsldd.dbf\"), as.is = TRUE)\n\n#Utilizando la funcion CreateUnicode, para obtener los UNICODEs\ntdc_cnsldd <- CreateUnicode(tdc_cnsldd)\ntdr_cnsldd <- CreateUnicode(tdr_cnsldd)\ntdd_cnsldd <- CreateUnicode(tdd_cnsldd)\ntdp_cnsldd <- CreateUnicode(tdp_cnsldd)\ntdv_cnsldd <- CreateUnicode(tdv_cnsldd)\n\n# Obteniendo el ciclo de rociado real sacado de la columna CODCNSLDD\ntdc_cnsldd$CICLO_ROCIADO<-substr(tdc_cnsldd$CODCNSLDD,8,8)\ntdr_cnsldd$CICLO_ROCIADO<-substr(tdr_cnsldd$CODCNSLDD,8,8)\ntdd_cnsldd$CICLO_ROCIADO<-substr(tdd_cnsldd$CODCNSLDD,8,8)\ntdp_cnsldd$CICLO_ROCIADO<-substr(tdp_cnsldd$CODCNSLDD,8,8)\ntdv_cnsldd$CICLO_ROCIADO<-substr(tdv_cnsldd$CODCNSLDD,8,8)\n\n#Creando una columna STATUS\ntdc_cnsldd$STATUS <- unlist(\"C\")\ntdr_cnsldd$STATUS <- unlist(\"R\")\ntdd_cnsldd$STATUS <- unlist(\"DES\")\ntdp_cnsldd$STATUS <- unlist(\"LP\")\ntdv_cnsldd$STATUS <- unlist(\"LV\")\n\n#Obteniendo solo columna que necesito\ntdc_cnsldd <- tdc_cnsldd[, c(1:5,19,20)]\ntdr_cnsldd <- tdr_cnsldd[, c(1:5,19,20)]\ntdd_cnsldd <- tdd_cnsldd[, c(1:5,19,20)]\ntdp_cnsldd <- tdp_cnsldd[, c(1:5,19,20)]\ntdv_cnsldd <- tdv_cnsldd[, c(1:5,19,20)]\n\n#Juntando \nC_R <- merge(tdc_cnsldd,tdr_cnsldd, all = TRUE)\nC_R_D <- merge(C_R,tdd_cnsldd, all = TRUE)\nC_R_D_LP <- merge(C_R_D,tdp_cnsldd, all = TRUE)\nC_R_D_LP_LV <-merge(C_R_D_LP,tdv_cnsldd, all = TRUE)\n\n#Obteniendo registros unicos de todos los registros de Arequipa\nC_R_D_LP_LV <- unique(C_R_D_LP_LV)\n\n#Aplicando funcion filtro para obtener solo los datos del distrito ASA\nstatusMinsa<-filtro(C_R_D_LP_LV,dentro)\n\n#Juntando con las tratadas    \ntratadas <- tratadas_ASA\ntratadas$STATUS <- unlist(\"T\")\ntratadas <- tratadas[,c(1:5,21,32,48,52)]\ntratadas <- unique(tratadas)\n\n#Merge\nstatusMinsaASA <- merge(statusMinsa, tratadas, all = TRUE)\n\n#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n#------------------       CONSOLIDADO GENERAL 2006 - 2015 MINSA        ------------------------ \n#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n#Leer datos\ncons2006_2009 <- read.csv(\"UNION_ROCIADOS.csv\")\n\n#Eliminado los que tienen \"0\" en la columna \"P\"\ncons2006_2009 <- cons2006_2009[!(cons2006_2009$P==0),]\n\n#Eliminamos columna \"ID\"\ncons2006_2009 <- subset(cons2006_2009, select = -ID)\n#Cambiamos de nombre a la columna CICLO por CICLO_ROCIADO\ncolnames(cons2006_2009)[57] <- \"CICLO_ROCIADO\"\n#Contruyendo UNICODE\ncons2006_2009$UNICODE<-paste(cons2006_2009$P, cons2006_2009$D, cons2006_2009$L, cons2006_2009$V, sep = \".\")\ncons2006_2009 <- cons2006_2009[,c(62,1:61)] # Ordenando columnas\n#Eliminar espacios en blanco de la columna UNICODE\ncons2006_2009$UNICODE <- gsub(\" \",\"\",cons2006_2009$UNICODE, fixed = T)\n\n#Convirtiendo todo los que tienen CICLO_ROCIADO = 0 a CICLO_ROCIADO = 1 (según javier)\ncons2006_2009$CICLO_ROCIADO[0 == cons2006_2009$CICLO_ROCIADO] <- 1\n\n#Creando la columana STATUS\ncons2006_2009$STATUS[cons2006_2009$Residual.T==1 | cons2006_2009$Residual.Rec==1] <- 1 #\"T\"\ncons2006_2009$STATUS[cons2006_2009$Residual.R==1 & is.na(cons2006_2009$STATUS)] <- 2 #\"R\"\ncons2006_2009$STATUS[cons2006_2009$Residual.C==1 & is.na(cons2006_2009$STATUS)] <- 3 #\"C\"\ncons2006_2009$STATUS[cons2006_2009$Residual.D==1 & is.na(cons2006_2009$STATUS)] <- 4 #\"DES\"\n#NOTA: El codigo \"1.25.26.1769\" tiene dos estados: \"C\" y \"Rec\", haremos valer el \"Rec\"\n#--------------------------------------------------------------------------------------\n\n#Completando STATUS con LP  y LV que se encuentran en el campo OBSERVACIONES\ncons2006_2009$STATUS[is.na(cons2006_2009$STATUS) & grepl(\"P.\",cons2006_2009$OBSERVACIONES, fixed = TRUE)] <- 5 #\"LP\"\ncons2006_2009$STATUS[is.na(cons2006_2009$STATUS) & (grepl(\"V.\",cons2006_2009$OBSERVACIONES, fixed = TRUE) | grepl(\"LOTE VACIO\",cons2006_2009$OBSERVACIONES))] <- 6 #\"LV\"\n#Si STATUS = NA y contiene la palabra \"CONSTRUCCIÓN\" o \"NO SE ROCIO\" ponemos C\ncons2006_2009$STATUS[is.na(cons2006_2009$STATUS) & (grepl(\"CONSTRUCCIÓN\",cons2006_2009$OBSERVACIONES) | grepl(\"NO SE ROCIO\",cons2006_2009$OBSERVACIONES))] <- 3 #\"C\"\n#Si STATUS = NA y contiene la palabra \"FUE ROCIADA\"\ncons2006_2009$STATUS[is.na(cons2006_2009$STATUS) & grepl(\"FUE ROCIADA\",cons2006_2009$OBSERVACIONES)] <- 1 #\"T\"\n#Viviendas que tienen dos UNICODEs\ncons2006_2009$STATUS[\"1.7.25.193\"== cons2006_2009$UNICODE & 1==cons2006_2009$CICLO] <- 1 #\"T\" # Vivienda 183 es T\ncons2006_2009$STATUS[\"1.7.25.236\"== cons2006_2009$UNICODE & 1==cons2006_2009$CICLO] <- 1 #\"T\" # Vivienda 194 es T\ncons2006_2009$STATUS[\"1.7.41.199\"== cons2006_2009$UNICODE & 1==cons2006_2009$CICLO] <- 1 #\"T\" # Vivienda 200 es T\ncons2006_2009$STATUS[\"1.7.41.238\"== cons2006_2009$UNICODE & 1==cons2006_2009$CICLO] <- 1 #\"T\" # Vivienda 237 es T\ncons2006_2009$STATUS[\"1.7.41.292\"== cons2006_2009$UNICODE & 1==cons2006_2009$CICLO] <- 1 #\"T\" # Vivienda 291 es T\ncons2006_2009$STATUS[\"1.7.8A.357\"== cons2006_2009$UNICODE & 1==cons2006_2009$CICLO] <- 1 #\"T\" # Vivienda 356 es T\ncons2006_2009$STATUS[\"1.7.41.238\"== cons2006_2009$UNICODE & 2==cons2006_2009$CICLO] <- 1 #\"T\" # Vivienda 237 es T\ncons2006_2009$STATUS[\"1.7.48C.15\"== cons2006_2009$UNICODE & 2==cons2006_2009$CICLO] <- 1 #\"T\" # Vivienda 12 es T\n#NOTA: Quedan 6 UNICODEs con NA en la columna STATUS\n#------------------------------------------------------------------------------\n\n#Creando la columna POS_CHIRI\ncons2006_2009$POS_CHIRI[1==cons2006_2009$I_TRIAT | 1==cons2006_2009$P_TRIAT] <- 1\ncons2006_2009$POS_CHIRI[is.na(cons2006_2009$POS_CHIRI)] <- 0\n\n#Seleccionando solo las columna UNICODE, CICLO, STATUS y POS_CHIRI\nstatus_cons2006_2009 <- subset(cons2006_2009, select = c(UNICODE, CICLO_ROCIADO, STATUS, POS_CHIRI))\nstatus_cons2006_2009 <- unique(status_cons2006_2009)\n\n#Utilizando funcion ElimDupliUxS()\nc1_cons2006_2009 <- ElimDupliUxS(status_cons2006_2009[1 == status_cons2006_2009$CICLO_ROCIADO,])\nc2_cons2006_2009 <- ElimDupliUxS(status_cons2006_2009[2 == status_cons2006_2009$CICLO_ROCIADO,])\n\n#Juntando los dos ciclos en uno solo y SIN NINGUN dato duplicado\nstatus_cons2006_2009 <- rbind(c1_cons2006_2009, c2_cons2006_2009)\n\n#----   \n#Acomodando los datos del consolidado 2009-2015 MINSA\n#Creando la columna STATUS\nCONS_ROCIADO_2009_2015$STATUS <- \"T\"\n#Creando columna POS_CHIRI\nCONS_ROCIADO_2009_2015$POS_CHIRI[is.na(CONS_ROCIADO_2009_2015$IN_TRI) & is.na(CONS_ROCIADO_2009_2015$PE_TRI)] <- 0\nCONS_ROCIADO_2009_2015$POS_CHIRI[is.na(CONS_ROCIADO_2009_2015$POS_CHIRI)] <- 1\nC_R_D_LP_LV$POS_CHIRI <- 0\n#Seleccionando solo las columnas \"UNICODE\", \"CICLO_ROCIADO\", \"STATUS\", \"POS_CHIRI\"\nstatus_T <- subset(CONS_ROCIADO_2009_2015, select = c(\"UNICODE\", \"CICLO_ROCIADO\", \"STATUS\", \"POS_CHIRI\"))\nstatus_C_R_D_LP_LV <- subset(C_R_D_LP_LV, select = c(\"UNICODE\", \"CICLO_ROCIADO\", \"STATUS\", \"POS_CHIRI\"))\n#Juntando consolidado 2009 - 2015\nstatus_cons2009_2015 <- rbind(status_T, status_C_R_D_LP_LV)\n#Registros unicos\nstatus_cons2009_2015 <- unique(status_cons2009_2015)\n#Cambiando el STATUS de letras (T, R, C, etct) por numeros de orden de prioridad (T=1, R=2, C=3, etc)\nstatus_cons2009_2015$STATUS[\"T\"==status_cons2009_2015$STATUS] <- 1\nstatus_cons2009_2015$STATUS[\"R\"==status_cons2009_2015$STATUS] <- 2\nstatus_cons2009_2015$STATUS[\"C\"==status_cons2009_2015$STATUS] <- 3\nstatus_cons2009_2015$STATUS[\"DES\"==status_cons2009_2015$STATUS] <- 4\nstatus_cons2009_2015$STATUS[\"LP\"==status_cons2009_2015$STATUS] <- 5\nstatus_cons2009_2015$STATUS[\"LV\"==status_cons2009_2015$STATUS] <- 6\n#Utilizando funcion ElimDupliUxS()\nc1_cons2009_2015 <- ElimDupliUxS(status_cons2009_2015[1 == status_cons2009_2015$CICLO_ROCIADO,])\nc2_cons2009_2015 <- ElimDupliUxS(status_cons2009_2015[2 == status_cons2009_2015$CICLO_ROCIADO,])\n#Juntando los dos ciclos en uno solo y SIN NINGUN dato duplicado\nstatus_cons2009_2015 <- rbind(c1_cons2009_2015, c2_cons2009_2015)\n\n#-----      \n#CONSOLIDADO COMPLETO DESDE EL 2006 HASTA 2015 DEL MINSA CON LAS COLUMNAS: UNICODE, CICLO_ROCIADO, STATUS, POS_CHIRI\n#Juntando consolidado final \nSTATUS_CONS_2006_2015 <- rbind(status_cons2006_2009, status_cons2009_2015) #181941\n#Registros unicos\nSTATUS_CONS_2006_2015 <- unique(STATUS_CONS_2006_2015) # 181416, se eliminaron #525\n#Utilizando funcion ElimDupliUxS()\nc1_cons2006_2015 <- ElimDupliUxS(STATUS_CONS_2006_2015[1==STATUS_CONS_2006_2015$CICLO_ROCIADO,])\nc2_cons2006_2015 <- ElimDupliUxS(STATUS_CONS_2006_2015[2==STATUS_CONS_2006_2015$CICLO_ROCIADO,])\n#Juntando los dos ciclos en uno solo y SIN NINGUN dato duplicado\nSTATUS_CONS_2006_2015 <- rbind(c1_cons2006_2015, c2_cons2006_2015) #181245: se eliminaron 171 registros duplicados\n#Cambiando los valores de la columna STATUS por T,R,C,DES,LP,LV para que no haya confusiones\nSTATUS_CONS_2006_2015$STATUS[1==STATUS_CONS_2006_2015$STATUS] <- \"T\"\nSTATUS_CONS_2006_2015$STATUS[2==STATUS_CONS_2006_2015$STATUS] <- \"R\"\nSTATUS_CONS_2006_2015$STATUS[3==STATUS_CONS_2006_2015$STATUS] <- \"C\"\nSTATUS_CONS_2006_2015$STATUS[4==STATUS_CONS_2006_2015$STATUS] <- \"DES\"\nSTATUS_CONS_2006_2015$STATUS[5==STATUS_CONS_2006_2015$STATUS] <- \"LP\"\nSTATUS_CONS_2006_2015$STATUS[6==STATUS_CONS_2006_2015$STATUS] <- \"LV\"\n#Separando por ciclos para poder poner cambiar los nombres de los campos\nc1_cons2006_2015 <- STATUS_CONS_2006_2015[1==STATUS_CONS_2006_2015$CICLO_ROCIADO,]\nc2_cons2006_2015 <- STATUS_CONS_2006_2015[2==STATUS_CONS_2006_2015$CICLO_ROCIADO,]\n#Cambiando los nombres de los campos dependiendo del ciclo al que pertenecen\ncolnames(c1_cons2006_2015) <- c(\"UNICODE\", \"C1\" , \"C1_STATUS\", \"C1_POS_CHIRI\")\ncolnames(c2_cons2006_2015) <- c(\"UNICODE\", \"C2\" , \"C2_STATUS\", \"C2_POS_CHIRI\")\n#Cambiando el valor de la columna C2 por 1=Presencia o O=Ausencia\nc2_cons2006_2015$C2 <- 1\n#Juntando los dos ciclos en un solo registro\nSTATUS_CONS_2006_2015 <- merge(c1_cons2006_2015, c2_cons2006_2015, by = \"UNICODE\", all = TRUE)\n#Ordenando por UNICODE\nSTATUS_CONS_2006_2015 <- STATUS_CONS_2006_2015[order(STATUS_CONS_2006_2015$UNICODE),]\n\n#----------------------------------------------------------------------------------------\n# Imprimiendo datos\n#----------------------------------------------------------------------------------------\nsetwd(\"/home/gianfranco/Documentos/github/Participation/bd_minsa/resultados\")\nwrite.csv(STATUS_CONS_2006_2015,'STATUS_CONS_2006_2015.csv')\nwrite.csv(CONS_ROCIADO_2009_2015,'CONS_ROCIADO_2009_2015.csv')\nwrite.csv(statusMinsaASA,'statusMinsaASA.csv')\nwrite.csv(tratadas_ASA,'tratadas_ASA.csv')\n\n\n",
    "created" : 1487387214112.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "132021307",
    "id" : "4318303F",
    "lastKnownWriteTime" : 1477096517,
    "last_content_update" : 1477096517,
    "path" : "~/CLAUDIA-DATOS-/claudia codigos r/bd_minsa/minsa_ccolorado/minsa.R",
    "project_path" : "claudia codigos r/bd_minsa/minsa_ccolorado/minsa.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}